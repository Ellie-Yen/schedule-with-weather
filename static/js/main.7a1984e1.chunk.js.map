{"version":3,"sources":["API_process_functions/fetchingAPI.js","data_process_functions/handleDatefunctions.js","API_process_functions/parseAPI.js","API_process_functions/handleFetchError.js","app_components/ButtonComponent.js","app_components/MyEffect.js","app_components/DropComponent.js","app_components/MyFormComponent.js","app_components/ListComponent.js","app_sections/SettingSection.js","app_components/CardComponent.js","app_components/ChartComponent.js","app_components/IconComponent.js","app_components/SpaceHolderComponent.js","data_process_functions/getModelByState.js","app_sections/WeatherSectionWeek.js","app_sections/WeatherSection3Day.js","app_sections/ScheduleSection.js","App.js","data_process_functions/FetchingState.js","reportWebVitals.js","index.js"],"names":["fetchWeather_3day","city","town","a","city_code","String","WeatherAPI","city_data","code_3day","padStart","url","base_url","city_baseCode","authorization","select_3day","console","log","myRequest","Request","fetch","res","ok","json","Promise","reject","Error","fetchWeather_week","select_week","fetchCalendar","api_key","calendar_id","time_min","time_max","CalendarExample","resolve","gapi","CalendarAPI","window","error","status","statusText","client","init","request","load","day_msecs","now_date","Date","now","week_time_list","display_time","getFormatDateString","date_obj","month","getMonth","date","getDate","day","getDay","i","t","valueOf","push","getWeekListIdxByDate","idx","wt","show_date","show_day","show_time","m","d","h","getHours","getMinutes","parseWeather","rawdata_3day","rawdata_week","data","success","TypeError","town_data","records","locations","location","weatherElement","time","length","RangeError","map","parseWeatherTime","startTime","display_date","hr","weather","rain_pro","temp","feel","wind","humidity","multi_weather_data","elementValue","value","split","is_night","replace","substring","parseWeather3Day","t_min","t_max","forEach","parseInt","w_pheno","w_point","min_t","max_t","time_stamp","day_span","weather_by_idx","weather_point","Math","max","last","min","display_day","t_range","parseWeatherWeek","date_str","parsed","parseCalendar","is_success","name","result","summary","list","items","item","event_name","link","htmlLink","time_spans","parseCalendarTimeSpan","start","end","recurrence","api_time_obj","dateTime","parsed_start","delta_time","match_date","T","target","undefined","getSameTimeStamp","valid","rule","includes","TryMatchRecurrenceRule","end_date","end_idx","start_idx","d_source","d_target","setHours","setMinutes","CalendarFetchErrorMsg","error_msg","code","message","WeatherFetchErrorMsg","ButtonComponent","props","className","cls_name","onClick","func","content","CircleButtonComponent","disabled","is_disable","icon_cls_name","IconTitleButtonComponent","ToggleButtonComponent","is_toggled","FadeInEffect","ref_obj","makeAnimate","elapsed","current","style","opacity","floor","FadeOutEffect","transform","flipEffect","GetClipPath","effect_func","requestAnimationFrame","makeEffect","timestamp","ContentDisplayController","React","useState","hide","setHide","ref_content","useRef","toggleOptions","event","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","delta","clipPath","hideContentEffect","setTimeout","parentNode","DropComponent","handleContentClick","title","hidden","ref","SideBarComponent","MyFormComponent","current_status","question_list","q","default_val","val","setVal","SetHelper","q_item","QuestionItem","question_item","setFunc","current_val","InputQuestionComponent","htmlFor","question","type","placeholder","onChange","ToggleQuestionComponent","SelectQuestionComponent","optionList","option_list","option","save_close","EvenlyColumnList","GridListComponent","num_cols","ColumnItem","LabelItem","ChooseLocationSection","setCity","setTown","handleSetCity","handleSetTown","CityList","useMemo","cities","TownList","town_list","EditCalendarArgSection","setAPIKey","setCalendarID","setUseExample","SettingSection","use_example_data","RefreshAll","CardComponent","appearance","has_shadow","gap_size","is_horizon","id","SlideCardsComponent","card_title","fig_cap","fig","page","SetPage","ref_card","FigCardComponent","HorizonCardComponent","TextCardComponent","main","footer","ChartComponent","x_unit","x_cords","x_pos","x_cord","XCordContainer","x_cord_idx","data_list","xmlns","LineGroup","y_pos","vals","cord","y","j","top","label","start_x","start_y","x","LineAndMarker","x1","y1","x2","y2","attributeName","attributeType","from","to","begin","dur","repeatCount","r","cx","cy","GetWeatherIcon","WeatherIcon","weather_code","ref_icons","GetSomethingFailedIcon","GetLetsStartIcon","LoadingText","lines","Array","keys","LoadingCircle","LoadingArea","SpaceHolderText","SpaceHolderArea","msg","getModelByState","loading","executes","failed","default","ForecastWeek","minT","maxT","getTPos","FaildForecastWeek","DefaultForecastWeek","LoadingForecastWeek","WeatherSectionWeek","data_model","Forecast3Day","GetContent","GetFigCap","FaildForecast3Day","DefaultForecast3Day","LoadingForecast3Day","WeatherSection3Day","WeatherList","weather_week","weather_by_day","night","w","DayWeatherComoponent","weather_obj","FailedWeatherList","failed_component","DefaultWeatherList","spaceholder","LoadingWeatherList","ScheduleList","event_by_day","event_item","daykey","Object","sort","EventItemComponent","schedule_name","FailedScheduleList","DefaultScheduleList","LoadingScheduleList","DayItemComponent","schedule","event_time","event_location","open","NoEventItemComponent","getFullYear","year","getCalendarLinkByDate","ScheduleSection","weather_list","schedule_list","App","setStart","setData","setLoading","useEffect","EndTime","toISOString","fetchingCalendarData","FetchCalendarState","schedule_data","schedule_loading","fetchResult_3day","fetchResult_week","parsedData","fetchingWeatherData","FetchingWeatherState","weather_data","weather_loading","Schedule","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0xoDAMeA,E,gFAAf,WAAiCC,EAAMC,GAAvC,qBAAAC,EAAA,6DAEQC,EAAYC,OAAOC,EAAWC,UAAUN,GAAMO,WAChCC,SAAS,EAAG,KAC1BC,EAJR,UAIiBJ,EAAWK,UAJ5B,OAIuCL,EAAWM,eAJlD,OAIkER,EAJlE,0BAI6FE,EAAWO,cAJxG,yBAIsIX,EAJtI,wBAI0JI,EAAWQ,YAJrK,cAKEC,QAAQC,IAAIN,GAENO,EAAY,IAAIC,QAAQR,GAPhC,SAQoBS,MAAMF,GAR1B,YAQQG,EARR,QASUC,GATV,yCAUWD,EAAIE,QAVf,gCAYSC,QAAQC,OAAO,IAAIC,MAAM,qBAZlC,6C,+BAeeC,E,gFAAf,WAAiCzB,EAAMC,GAAvC,qBAAAC,EAAA,6DAGQC,EAAYC,OAAOC,EAAWC,UAAUN,GAAMO,UAChC,GAAIC,SAAS,EAAG,KAC9BC,EALR,UAKiBJ,EAAWK,UAL5B,OAKuCL,EAAWM,eALlD,OAKkER,EALlE,0BAK6FE,EAAWO,cALxG,yBAKsIX,EALtI,wBAK0JI,EAAWqB,YALrK,cAMEZ,QAAQC,IAAIN,GAENO,EAAY,IAAIC,QAAQR,GARhC,SASoBS,MAAMF,GAT1B,YASQG,EATR,QAUUC,GAVV,yCAWWD,EAAIE,QAXf,gCAaSC,QAAQC,OAAO,IAAIC,MAAM,qBAblC,6C,+BAiBeG,E,oFAAf,WAA6BC,EAASC,EAAaC,EAAUC,GAA7D,yBAAA7B,EAAA,wIAQW8B,GARX,gCAWS,IAAIV,SAAQ,SAACW,EAASV,GAC3B,IAEIW,EAFEzB,EAAG,UAAM0B,EAAYzB,UAAlB,OAA6BmB,EAA7B,2BAA2DE,EAA3D,oBAA+ED,GACxFhB,QAAQC,IAAIN,GAEZ,IACEyB,EAAOE,OAAOF,KAEhB,MAAMG,GACJd,EAAO,CACLe,OAAQD,EACRE,WAAY,oBAVoB,4CAapC,4BAAArC,EAAA,sEACQgC,EAAKM,OAAOC,KAAK,CACrB,OAAUb,IAFd,OAIQT,EAAMe,EAAKM,OAAOE,QAAQ,CAC9B,KAAQjC,IAEV,IACEwB,EAAQd,GAEV,MAAMkB,GACJd,EAAO,CACLe,OAAQD,EACRE,WAAY,UAblB,4CAboC,sBA8BpCL,EAAKS,KAAK,UA9B0B,iDAXxC,4C,sBC1BA,I,YAXMC,EAAY,MACZC,EAAW,IAAIC,KAAKA,KAAKC,OACzBC,EAAiB,CACrB,CACEC,aAAcC,EAAoBL,GAAU,GAAM,GAAM,GACxDM,SAAUN,EACVO,MAAOP,EAASQ,WAChBC,KAAMT,EAASU,UACfC,IAAKX,EAASY,WAGTC,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACzB,IAAMC,EAAI,IAAIb,KAAKE,EAAeU,EAAI,GAAGP,SAASS,UAAYhB,GAC9DI,EAAea,KAAK,CAClBZ,aAAcC,EAAoBS,GAAG,GAAM,GAAM,GACjDR,SAAUQ,EACVP,MAAOO,EAAEN,WACTC,KAAMK,EAAEJ,UACRC,IAAKG,EAAEF,WAIX,SAASK,EAAqBX,GAK5B,IADA,MAAsB,CAACA,EAASE,WAAYF,EAASI,WAA9CH,EAAP,KAAcE,EAAd,KACQS,EAAM,EAAGA,EAAM,EAAGA,IAAO,CAC/B,IAAMC,EAAKhB,EAAee,GAC1B,GAAIC,EAAGV,OAASA,GAAQU,EAAGZ,QAAUA,EACnC,OAAOD,EAAWa,EAAGb,SAAWP,EAAYmB,GAAO,EAGvD,OAAQ,EAGV,SAASb,EAAoBC,EAAUc,EAAWC,EAAUC,GAG1D,IACIhD,EAAM,GACV,GAAI8C,EAAU,CAEZ,IAAMG,EAAIjB,EAASE,WAAa,EAC1BgB,EAAIlB,EAASI,UACnBpC,GAAG,UAAOiD,EAAI,GAAK,IAAMA,EAAGA,EAAzB,YAA8BC,EAAI,GAAK,IAAMA,EAAGA,EAAhD,KAKL,GAHIH,IACF/C,GAAG,UATW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OASvCgC,EAASM,UAAxB,MAEDU,EAAU,CACZ,IAAMG,EAAInB,EAASoB,WACbH,EAAIjB,EAASqB,aACnBrD,GAAG,UAAOmD,EAAI,GAAK,IAAMA,EAAGA,EAAzB,cAAgCF,EAAI,GAAK,IAAMA,EAAGA,EAAlD,KAEL,OAAOjD,EClDT,SAASsD,EAAaC,EAAcC,GAGlC,IAAIxD,EAAM,GACV,IACEA,EAAI,QAUR,SAA0ByD,GAGxB,GAAqB,SAAjBA,EAAKC,QACP,OAAO,IAAIC,UAAU,wBAEvB,IAAMC,EAAYH,EAAKI,QAAQC,UAAU,GAAGC,SAAS,GAAGC,eAExD,GAAiC,IAA7BJ,EAAU,GAAGK,KAAKC,OACpB,OAAO,IAAIC,WAAW,WA+BxB,OA3BYP,EAAU,GAAGK,KAAKG,KAAI,SAAAvB,GAChC,IAAMoB,EAAOI,EAAiBxB,EAAGyB,WAC3BxC,EAAY,UAAMmC,EAAKM,aAAX,YAA2BN,EAAKO,GAAhC,cAAwCP,EAAKO,GAAK,EAAlD,UAElB,EAAsD,GAAjDC,EAAL,KAAcC,EAAd,KAAwBC,EAAxB,KAA8BC,EAA9B,KAAoCC,EAApC,KAA0CC,EAA1C,KACMC,EAAqBlC,EAAGmC,aAAa,GAAGC,MAAMC,MAAM,UAG1D,GAAkC,IAA9BH,EAAmBb,OAAa,CAAC,IAAD,cACgBa,EADhB,GACjCN,EADiC,KACxBC,EADwB,KACdC,EADc,KACRC,EADQ,KACFC,EADE,KACIC,EADJ,SAG/B,CAAC,IAAD,cACqCC,EADrC,GACFN,EADE,KACOE,EADP,KACaC,EADb,KACmBC,EADnB,KACyBC,EADzB,KAEHJ,EAAW,KAGb,MAAO,CACLT,KAAMnC,EACNqD,SAAUlB,EAAKkB,SACfV,UACAC,SAAUA,EAASQ,MAAM,KAAK,GAAGE,QAAQ,IAAK,IAC9CT,KAAMA,EAAKU,UAAU,GAAGD,QAAQ,SAAK,IACrCN,SAAUA,EAASO,UAAU,GAAGD,QAAQ,IAAK,IAC7CR,OACAC,WA/CYS,CAAiB/B,GAC/BvD,EAAG,KAmDP,SAA0ByD,GAUxB,GAAqB,SAAjBA,EAAKC,QACP,OAAO,IAAIC,UAAU,wBAEvB,kBAA0CF,EAAKI,QAAQC,UAAU,GAAGC,SAAS,GAAGC,eAAhF,GAAOU,EAAP,KAAiBD,EAAjB,KAA0Bc,EAA1B,KAAiCC,EAAjC,KAEA,GAA6B,IAAzBd,EAAST,KAAKC,OAChB,OAAO,IAAIC,WAAW,WAExB,IAAMnE,EAAM,CACV,eAAkB,GAClB,KAAQ,CACN,YAAe,GACf,MAAS,GACT,MAAS,GACT,QAAW,CAAC,KAAM,OAuDtB,OApDA0E,EAAST,KAAKwB,SAAQ,SAAC5C,EAAIN,GACzB,IAAMmC,EAAWgB,SAAS7C,EAAGmC,aAAa,GAAGC,QAAU,EACjDU,EAAUlB,EAAQR,KAAK1B,GAAGyC,aAAa,GAAGC,MAC1CW,EAAUnB,EAAQR,KAAK1B,GAAGyC,aAAa,GAAGC,MAC1CY,EAAQN,EAAMtB,KAAK1B,GAAGyC,aAAa,GAAGC,MACtCa,EAAQN,EAAMvB,KAAK1B,GAAGyC,aAAa,GAAGC,MAEtChB,EAAOI,EAAiBxB,EAAGyB,WAC3B1B,EAAMD,EAAqBsB,EAAK8B,YACtC,IAAa,IAATnD,EAAW,CACb,IAAMoD,EAAW/B,EAAKkB,SAAW,QAAS,MAE1C,GAAInF,EAAIiG,eAAerD,GAAK,CAEpB5C,EAAIiG,eAAerD,GAAKoD,KAC5BhG,EAAIiG,eAAerD,GAAKoD,GAAY,CAClCvB,QAASkB,EACTO,cAAeN,EACflB,SAAUA,IAIV1E,EAAIiG,eAAerD,GAAKoD,GAAUE,cAAgBN,IACpD5F,EAAIiG,eAAerD,GAAKoD,GAAUE,cAAgBN,EAClD5F,EAAIiG,eAAerD,GAAKoD,GAAUvB,QAAUkB,GAE9C3F,EAAIiG,eAAerD,GAAKoD,GAAUtB,SAClCyB,KAAKC,IAAIpG,EAAIiG,eAAerD,GAAKoD,GAAUtB,SAAUA,GAGrD,IAAM2B,EAAOrG,EAAI2E,KAAKY,MAAMrB,OAAS,EACrClE,EAAI2E,KAAKY,MAAMc,GAAQF,KAAKG,IAAItG,EAAI2E,KAAKY,MAAMc,GAAOR,GACtD7F,EAAI2E,KAAKa,MAAMa,GAAQF,KAAKC,IAAIpG,EAAI2E,KAAKa,MAAMa,GAAOP,QAItD9F,EAAIiG,eAAerD,GAAO,GAC1B5C,EAAIiG,eAAerD,GAAKoD,GAAY,CAClCvB,QAASkB,EACTO,cAAeN,EACflB,SAAUA,GAGZ1E,EAAI2E,KAAK4B,YAAY7D,KAAKuB,EAAKM,aAAaW,MAAM,KAAK,IACvDlF,EAAI2E,KAAKY,MAAM7C,KAAKmD,GACpB7F,EAAI2E,KAAKa,MAAM9C,KAAKoD,GAEtB9F,EAAI2E,KAAK6B,QAAQ,GAAKL,KAAKG,IAAItG,EAAI2E,KAAK6B,QAAQ,GAAIX,GACpD7F,EAAI2E,KAAK6B,QAAQ,GAAKL,KAAKC,IAAIpG,EAAI2E,KAAK6B,QAAQ,GAAIV,OAIjD9F,EAlISyG,CAAiBjD,GAC/BxD,EAAG,YAAiB,EAEtB,MAAMkB,GACJvB,QAAQC,IAAIsB,GACZlB,EAAG,YAAiB,EAEtB,OAAOA,EA6HT,SAASqE,EAAiBqC,GACxB,IAAMC,EAAS,IAAIhF,KAAK+E,GAClBlC,EAAKmC,EAAOvD,WAElB,MAAO,CACL2C,WAAYY,EACZnC,GAAIA,EACJD,aAAcxC,EAAoB4E,GAAQ,GAAM,GAAM,GACtDxB,SAAUX,GAAM,IAAMA,EAAK,GAK/B,SAASoC,EAAcnD,GAIrB,IAWE,MAVY,CACVoD,YAAY,EACZC,KAAMrD,EAAKsD,OAAOC,QAClBC,KAAMxD,EAAKsD,OAAOG,MAAM9C,KAAI,SAAA+C,GAAI,MAAK,CACnCC,WAAYD,EAAKH,QACjBjD,SAAUoD,EAAKpD,SACfsD,KAAMF,EAAKG,SACXC,WAAYC,EAAsBL,EAAKM,MAAON,EAAKO,IAAKP,EAAKQ,iBAKnE,MAAOzG,GAEL,OADAvB,QAAQC,IAAIsB,GACL,CACL2F,YAAY,IAIlB,SAASW,EAAsBC,EAAOC,EAAKC,GAIzC,MAAmC,CAACF,EAAOC,GAAKtD,KAAI,SAAA5B,GAAC,OAmD5BoF,EAnDkDpF,GAuD/CL,KAC3B,IAAIR,KAAKiG,EAAazF,KAAO,aAC7B,IAAIR,KAAKiG,EAAaC,UANzB,IAA2BD,KAnDzB,mBAAOE,EAAP,KACMC,EADN,KACgCD,EAC1BP,EAAa,GAenB,OAdA1F,EAAe4D,SAAQ,SAAC5C,EAAIN,GAC1B,IAAMyF,EAeV,SAAgCC,EAAGC,EAAQP,GAQzC,MAA2B,CAACO,EAAOhG,WAAYgG,EAAO9F,UAAW8F,EAAO5F,UAAjEL,EAAP,KAAcE,EAAd,KAAoBE,EAApB,KACA,QAAmB8F,IAAfR,EACF,SAAI1F,IAAUgG,EAAEhG,OAASE,IAAS8F,EAAE9F,KAAO+F,EAASD,EAAEjG,SAAWP,IACxD2G,EAAiBH,EAAEjG,SAAUkG,GAIxC,IAfoD,EAehDG,GAAQ,EAfwC,cAgBnCV,GAhBmC,IAgBpD,2BAA4B,CAAC,IAApBW,EAAmB,QAC1B,GAAIA,EAAKC,SAAS,UAAYN,EAAE5F,MAAQA,EAAI,CAC1CgG,GAAQ,EAAM,MAEX,GAAIC,EAAKC,SAAS,YAAcN,EAAE9F,OAASA,EAAK,CACnDkG,GAAQ,EAAM,MAEX,GAAIC,EAAKC,SAAS,cAAgBN,EAAE9F,OAASA,GAAQ8F,EAAEhG,QAAUA,EAAM,CAC1EoG,GAAQ,EAAM,MAEX,GAAIC,EAAKC,SAAS,SAAS,CAC9BF,GAAQ,EAAM,QA3BkC,8BA8BpD,QAAOA,GAAQD,EAAiBH,EAAEjG,SAAUkG,GA7CvBM,CAAuB3F,EAAIiF,EAAcH,GAC5D,IAAmB,IAAfK,EAAqB,CACvB,IAAMS,EAAW,IAAI9G,KAAKqG,EAAaD,GACjCW,EAAU/F,EAAqB8F,GACrClB,EAAW7E,KAAK,CACdiG,UAAWpG,EACXmG,SAAsB,IAAbA,EAAiB,EAAGA,EAC7B5G,aACEC,EAAoB,IAAIJ,KAAKqG,IAAa,GAAM,GAAM,GAAQ,MAC9DjG,EAAoB0G,GAAU,GAAM,GAAM,SAI3ClB,EA2CT,SAASa,EAAiBQ,EAAUC,GAIlC,OAFAD,EAASE,SAASD,EAASzF,YAC3BwF,EAASG,WAAWF,EAASxF,cACtBuF,EAASnG,UCzPlB,SAASuG,EAAsB9H,GAE7B,MAAO,CACL+H,UAAU,GAAD,OACN/H,EAAM6F,OAAO7F,MAAMgI,KADb,aACsBhI,EAAM6F,OAAO7F,MAAMiI,UAGtD,SAASC,EAAqBlI,GAE5B,MAAO,CACL,OAAQ,CAAC+H,UAAW/H,GACpB,KAAQ,CAAC+H,UAAW/H,I,iBCTxB,SAASmI,EAAgBC,GAKvB,OACE,qBAAKC,UAAS,qCAAgCD,EAAME,UAAY,IAC9DC,QAASH,EAAMI,KADjB,SAGGJ,EAAMK,UAIb,SAASC,EAAsBN,GAM7B,IAAMO,OAAgC1B,IAArBmB,EAAMQ,WAA2B,QAASR,EAAMQ,WACjE,OACE,mBAAGP,UAAS,gBAAWD,EAAMS,cAAjB,oBAA0CF,EAA1C,4CAAsFP,EAAME,UAAY,IAClHC,QAASH,EAAMI,OAIrB,SAASM,EAAyBV,GAMhC,OACE,sBAAKC,UAAS,4CAAuCD,EAAME,UAAY,IACrEC,QAASH,EAAMI,KADjB,UAGE,mBAAGH,UAAS,gBAAWD,EAAMS,cAAjB,gBACXT,EAAMK,WAKb,SAASM,EAAsBX,GAM7B,OACE,sBAAKC,UAAS,wBAAmBD,EAAME,UAAY,IACjDC,QAASH,EAAMI,KADjB,UAGE,qBAAKH,UAAS,iBAAYD,EAAMY,WAAlB,gBAAd,SACE,sBAAMX,UAAS,kBAAaD,EAAMY,WAAnB,kDAEhBZ,EAAMK,WCzDb,SAASQ,EAAaC,GAKpBC,GAHoB,SAACC,GACnBF,EAAQG,QAAQC,MAAMC,QAAtB,UAAmCtE,KAAKuE,MAAMJ,EAAU,GAAxD,QAKJ,SAASK,EAAcP,GAKrBC,GAHoB,SAACC,GACnBF,EAAQG,QAAQC,MAAMC,QAAtB,UAAmCtE,KAAKuE,MAAM,IAAMJ,EAAU,GAA9D,QAKJ,SAAoBF,GAIlBC,GAHoB,SAACC,GACnBF,EAAQG,QAAQC,MAAMI,UAAtB,kBAA6CzE,KAAKuE,MAAOJ,EAAU,EAAK,KAAxE,WAJFO,CAAWT,GAsBb,SAASU,EAAY5H,GACnB,MAAM,WAAN,OAAkBA,EAAlB,aAAwBA,EAAxB,eAGF,SAASmH,EAAYU,GAGnB,IAAItD,EAwBJxG,OAAO+J,uBAvBP,SAASC,EAAWC,QACJ/C,IAAVV,IACFA,EAAQyD,GAGV,IAAMZ,EAAUnE,KAAKC,IAAID,KAAKG,IAAI4E,EAAYzD,EAAO,KAAM,GAC3D,IACEsD,EAAYT,GAEd,MAAMpJ,GAGJ,YADAuG,OAAQU,GAGNmC,EAAU,IACZrJ,OAAO+J,sBAAsBC,IAI7BF,EAAY,KACZtD,OAAQU,M,MC3Dd,SAASgD,IACP,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAcJ,IAAMK,OAAO,MAC3BC,EAAgB,SAACC,GAOrB,GAHAA,EAAMC,iBACND,EAAME,kBACNF,EAAMG,YAAYC,2BACdT,EAGF,OAFAC,GAAQ,GDManB,ECLHoB,ODUtBnB,GAJoB,SAACC,GACnB,IAAM0B,EAAQ7F,KAAKuE,MAAMJ,EAAU,GACnCF,EAAQG,QAAQC,MAAMyB,SAAqB,MAAVD,EAAgB,OAASlB,EAAYkB,MAH1E,IAA2B5B,GAO3B,SAA2BA,GAKzBC,GAJoB,SAACC,GACnB,IAAM0B,EAAQ7F,KAAKuE,MAAM,IAAMJ,EAAU,GACzCF,EAAQG,QAAQC,MAAMyB,SAAqB,MAAVD,EAAgB,OAASlB,EAAYkB,MCZtEE,CAAkBV,GAClBW,YAAW,WAAMZ,GAAQ,KAAS,MAQpC,MAAO,CAACD,EAAMI,EANa,SAACC,IACtBA,EAAMzD,OAAOqB,UAAUhB,SAAS,mBAClCoD,EAAMzD,OAAOkE,WAAW7C,UAAUhB,SAAS,oBACzCmD,EAAcC,IAG6BH,GAGnD,SAASa,EAAc/C,GAKrB,MAA+D6B,IAA/D,mBAAOG,EAAP,KAAaI,EAAb,KAA4BY,EAA5B,KAAgDd,EAAhD,KACA,OACE,sBAAKjC,UAAS,yBAAoBD,EAAME,UAAY,IAApD,UACE,cAAC,EAAD,CACEA,SAAS,aACTE,KAAMgC,EACN/B,QACE,qCACGL,EAAMiD,MACP,mBAAGhD,UAAS,wBAAmB+B,EAAO,OAAS,aAIrD,qBAAK/B,UAAS,uBAAkB+B,GAAQ,YACtCkB,OAAQlB,EACRmB,IAAKjB,EACL/B,QAAS6C,EAHX,SAKGhD,EAAMK,aAMf,SAAS+C,EAAiBpD,GAKxB,MAA+D6B,IAA/D,mBAAOG,EAAP,KAAaI,EAAb,KAA4BY,EAA5B,KAAgDd,EAAhD,KACA,OACE,sBAAKjC,UAAS,+BAA0B+B,GAAQ,UAAlC,aAAgDhC,EAAME,UAAY,IAAhF,UACE,cAAC,EAAD,CACEA,SAAS,iCACTE,KAAMgC,EACN/B,QAASL,EAAMiD,QAEjB,qBAAKhD,UAAS,UAAK+B,GAAQ,uBACzBkB,OAAQlB,EACR7B,QAAS6C,EACTG,IAAKjB,EAHP,SAKGlC,EAAMK,a,MC1Ef,SAASgD,EAAgBrD,GAOvB,IAAMsD,EAAiBtD,EAAMuD,cAAczI,KAAI,SAAA0I,GAAC,OAgHlD,SAAmBC,GACjB,MAAsB3B,IAAMC,SAAS0B,GAArC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,MAAO,CAAC,YAAeD,EAAK,OAAUC,GAjHpCC,CAAUJ,EAAEC,gBAYd,OACE,sBAAKxD,UAAU,kBAAf,UACGD,EAAMuD,cAAczI,KAAI,SAAC+I,EAAQ5K,GAAT,OACvB,cAAC6K,EAAD,CACEC,cAAeF,EACf5C,QAASqC,EAAerK,IAF1B,kBAGkBA,OAGpB,sBAAKgH,UAAU,SAAf,UACE,cAACS,EAAD,CACER,SAAQ,yBACRO,cAAc,QACdJ,QAAQ,OACRD,KAxBa,WACnBkD,EAAenH,SAAQ,SAACtE,EAAQoB,GAC9B+G,EAAMuD,cAActK,GAAG+K,QAAQnM,EAAOoM,mBAwBpC,cAACvD,EAAD,CACER,SAAQ,2BACRO,cAAc,IACdJ,QAAQ,SACRD,KAzBa,WACnBkD,EAAenH,SAAQ,SAACtE,EAAQoB,GAC9BpB,EAAO8L,OAAO3D,EAAMuD,cAActK,GAAGwK,yBA8B3C,SAASS,EAAuBlE,GAS9B,OACE,sBAAKC,UAAU,YAAf,UACE,uBAAOkE,QAASnE,EAAMoE,SAAtB,SACGpE,EAAMoE,WAET,sBAAKnE,UAAU,qBAAf,UACE,mBAAGA,UAAS,UAAKD,EAAMS,cAAX,iBACZ,uBACER,UAAU,wBACVzC,KAAMwC,EAAMoE,SACZC,KAAK,OACLC,YAAatE,EAAMoE,SACnBzI,MAAOqE,EAAM0D,IACba,SAhBY,SAAClC,GACnBrC,EAAM2D,OAAOtB,EAAMzD,OAAOjD,gBAqB9B,SAAS6I,EAAwBxE,GAQ/B,OACE,cAACW,EAAD,CACEC,WAAYZ,EAAM0D,IAClBtD,KANgB,WAClBJ,EAAM2D,QAAS3D,EAAM0D,MAMnBrD,QAASL,EAAMoE,WAIrB,SAASK,EAAwBzE,GAM/B,IAAM0E,EACJ,qBAAKzE,UAAU,wBAAf,SACGD,EAAM2E,YAAY7J,KAAI,SAAC8J,EAAQ3L,GAAT,OACrB,cAAC,EAAD,CACEiH,SAAQ,gCAA2B0E,IAAW5E,EAAM0D,IAAM,WAAY,IACtErD,QAASuE,EACTxE,KAAM,WAAKJ,EAAM2D,OAAOiB,KAH1B,iBAIiB3L,SAMvB,OACE,cAAC,EAAD,CACEgK,MAAOjD,EAAM0D,IACbrD,QAASqE,EACTG,YAAY,IASlB,SAASf,EAAa9D,GAIpB,OAAQA,EAAM+D,cAAcM,MAC1B,IAAK,QACH,OACA,cAACH,EAAD,CACEE,SAAUpE,EAAM+D,cAAcK,SAC9B3D,cAAeT,EAAM+D,cAActD,cACnCiD,IAAK1D,EAAMiB,QAAQgD,YACnBN,OAAQ3D,EAAMiB,QAAQ0C,SAG1B,IAAK,SACH,OACE,cAACc,EAAD,CACEL,SAAUpE,EAAM+D,cAAcK,SAC9BO,YAAa3E,EAAM+D,cAAcY,YACjCjB,IAAK1D,EAAMiB,QAAQgD,YACnBN,OAAQ3D,EAAMiB,QAAQ0C,SAG5B,IAAK,SACH,OACE,cAACa,EAAD,CACEJ,SAAUpE,EAAM+D,cAAcK,SAC9BV,IAAK1D,EAAMiB,QAAQgD,YACnBN,OAAQ3D,EAAMiB,QAAQ0C,SAG5B,QACE,OAAO,8BChKb,SAASmB,EAAiB9E,GAIxB,OACE,cAAC+E,EAAD,CACE7E,SAAUF,EAAME,SAChB8E,SAAUhF,EAAMrC,KAAK/C,OACrB+C,KAAMqC,EAAMrC,OAIlB,SAASoH,EAAkB/E,GAKzB,IAAMkB,EAAQ,CACZ,oBAAsB,UAAtB,OAAiClB,EAAMgF,SAAvC,WAEF,OACE,qBAAK/E,UAAS,4CAAuCD,EAAME,UACzDgB,MAAOA,EADT,SAGGlB,EAAMrC,KAAK7C,KAAI,SAAC+C,EAAM5E,GAAP,OACd,cAACgM,GAAD,CACE5E,QAASxC,GADX,eAEemC,EAAME,SAFrB,YAEiCjH,SAMzC,SAASgM,GAAWjF,GAGlB,OACE,qBAAKC,UAAU,8BAAf,SACGD,EAAMK,UAKb,SAAS6E,GAAUlF,GAGjB,OACE,sBAAKC,UAAS,qCAAd,UACE,qBAAKA,UAAU,qBAAf,SACGD,EAAMiD,QAET,qBAAKhD,UAAU,uBAAf,SACGD,EAAMK,aCZf,SAAS8E,GAAsBnF,GAK7B,MAAwB8B,IAAMC,SAAS,4BAAvC,mBAAOxM,EAAP,KAAa6P,EAAb,KACA,EAAwBtD,IAAMC,SAAS,4BAAvC,mBAAOvM,EAAP,KAAa6P,EAAb,KAEMC,EAAgB,SAAC9H,GAErBwC,EAAMqF,QAAQ,IACdrF,EAAMoF,QAAQ5H,GACd6H,EAAQ,4BACRD,EAAQ5H,IAEJ+H,EAAgB,SAAC/H,GACrBwC,EAAMqF,QAAQ7H,GACd6H,EAAQ7H,IAMJgI,EAAW1D,IAAM2D,SAAQ,kBAC7B,cAAChB,EAAD,CACEf,IAAKnO,EACLoP,YAAa/O,EAAW8P,OACxB/B,OAAQ2B,MAGT,CAAC/P,IAGEoQ,EAAW7D,IAAM2D,SAAQ,kBAC7B,cAAChB,EAAD,CACEf,IAAKlO,EACLmP,YACW,6BAATpP,EAAkB,GAClBK,EAAWC,UAAUN,GAAMqQ,UAE7BjC,OAAQ4B,MAGT,CAAChQ,EAAMC,IACJ6K,EACJ,qCACGmF,EACAG,KAGC1C,EACJ,cAACiC,GAAD,CACEjC,MAAO,mBAAGhD,UAAU,kBACpBI,QAAQ,yCAGZ,OACE,cAAC,EAAD,CACEH,SAAS,mBACT+C,MAAOA,EACP5C,QAASA,IAKf,SAASwF,GAAuB7F,GAE7B,IAAMK,EACJ,cAAC,EAAD,CACCkD,cAAe,CACb,CACEa,SAAU,iBACVC,KAAM,QACNZ,YAAa,GACbhD,cAAe,iBACfuD,QAAShE,EAAM8F,WAEjB,CACE1B,SAAU,wBACVC,KAAM,QACNZ,YAAa,GACbhD,cAAe,sBACfuD,QAAShE,EAAM+F,eAEjB,CACE3B,SAAU,kEACVC,KAAM,SACNZ,aAAa,EACbO,QAAShE,EAAMgG,kBAKhB/C,EACL,cAACiC,GAAD,CACEjC,MAAO,mBAAGhD,UAAU,oBACpBI,QAAQ,+CAGX,OACC,cAAC,EAAD,CACEH,SAAS,mBACT+C,MAAOA,EACP5C,QAASA,IAKA4F,OA5If,SAAwBjG,GAItB,OACE,cAACoD,EAAD,CACElD,SAAS,UACT+C,MAAO,mBAAGhD,UAAU,eACpBI,QACE,qCACE,cAAC8E,GAAD,CACEC,QAASpF,EAAMoF,QACfC,QAASrF,EAAMqF,UAEjB,cAACQ,GAAD,CACEC,UAAW9F,EAAM8F,UACjBC,cAAe/F,EAAM+F,cACrBC,cAAehG,EAAMgG,cACrBE,iBAAkBlG,EAAMkG,mBAE1B,cAACxF,EAAD,CACER,SAAS,UACTO,cAAc,qBACdJ,QAAQ,qEACRD,KAAMJ,EAAMmG,mB,MC3BxB,SAASC,GAAcpG,GAOrB,IAAIqG,EAAa,GACbrG,EAAMsG,aACRD,GAAc,UAEhBA,GAAU,YAASrG,EAAMuG,UAAY,IACrC,IAAM3M,EAAIoG,EAAMwG,WAAa,KAAM,KACnC,OACE,qBAAKC,GAAIzG,EAAMxC,KACbyC,UAAS,kBAAarG,EAAb,+BAAqCyM,EAArC,YAAmDrG,EAAME,UAAY,IADhF,SAGGF,EAAMK,UAKb,SAASqG,GAAoB1G,GAG3B,IA8BI2G,EAAgBtG,EAAauG,EAAaC,EAASrJ,EA9BvD,EAAwBsE,IAAMC,SAAS,GAAvC,mBAAO+E,EAAP,KAAaC,EAAb,KACMC,EAAWlF,IAAMK,OAAO,MA6C9B,OAfMnC,EAAMK,SAAaL,EAAMK,QAAQyG,IASrCH,EAAa3G,EAAMK,QAAQyG,GAAMH,WACjCtG,EAAUL,EAAMK,QAAQyG,GAAMzG,QAC9BuG,EAAU5G,EAAMK,QAAQyG,GAAMF,QAC9BC,EAAM7G,EAAMK,QAAQyG,GAAMD,IAC1BrJ,EAAOwC,EAAMK,QAAQyG,GAAMtJ,OAZ3BuJ,EAAQ,GACRJ,EAAa,KACbtG,EAAU,KACVuG,EAAU,KACVC,EAAM,KACNrJ,EAAO,MAUP,sBAAKyC,UAAU,0BAAf,UACE,qBAAKA,UAAU,kCACbkD,IAAK6D,EADP,SAGE,cAACC,GAAD,CACEzJ,KAAMA,EACN0C,SAAS,GACTyG,WAAYA,EACZtG,QAASA,EACTwG,IAAKA,EACLD,QAASA,MAGb,cAACtG,EAAD,CACEJ,SAAS,YACTO,cAAc,eACdD,WAAqB,IAATsG,EACZ1G,KAlDU,WACD,IAAT0G,IAGJzF,EAAc2F,GACdnE,YAAW,WACTkE,EAAQD,EAAO,KACd,KACHjE,YAAW,WACThC,EAAamG,KACZ,SA0CD,cAAC1G,EAAD,CACEJ,SAAS,YACTO,cAAc,gBACdD,WAAYsG,IAAS9G,EAAMK,QAAQzF,OAAS,EAC5CwF,KApEW,WACX0G,IAAS9G,EAAMK,QAAQzF,OAAS,IAGpCyG,EAAc2F,GACdnE,YAAW,WACTkE,EAAQD,EAAO,KACd,KACHjE,YAAW,WACThC,EAAamG,KACZ,YAgEP,SAASC,GAAiBjH,GAQxB,IAAMK,EACJ,sBAAKJ,UAAS,yBAAd,UACE,wBAAQA,UAAU,8BAAlB,SACGD,EAAM2G,aAET,uBAAM1G,UAAU,8CAAhB,UACE,qBAAKA,UAAU,iBAAf,SACGD,EAAM6G,MAET,qBAAK5G,UAAU,iCAAf,SACGD,EAAM4G,aAGX,wBAAQ3G,UAAU,sBAAlB,SACGD,EAAMK,aAIb,OACE,cAAC,GAAD,CACE7C,KAAMwC,EAAMxC,KACZ0C,SAAUF,EAAME,SAChBoG,YAAY,EACZjG,QAASA,IAKf,SAAS6G,GAAqBlH,GAI5B,IAAMK,EACJ,sBAAKJ,UAAS,kCAAd,UACE,qBAAKA,UAAU,kCAAf,SACGD,EAAMiD,QAET,qBAAKhD,UAAU,8CAAf,SACGD,EAAMK,aAIb,OACE,cAAC,GAAD,CACEH,SAAUF,EAAME,SAChBoG,YAAY,EACZjG,QAASA,IAKf,SAAS8G,GAAkBnH,GAKzB,OACE,qBAAKC,UAAS,kCAA6BD,EAAME,UAAY,IAC3DC,QAASH,EAAMI,KADjB,SAGE,sBAAKH,UAAU,mCAAf,UACE,sBAAMA,UAAU,qBAAhB,SACGD,EAAMoH,OAET,wBAAQnH,UAAU,sBAAlB,SACGD,EAAMqH,c,mBChLjB,SAASC,GAAetH,GAYtB,IAFA,IAAMuH,EAAS,IAAMvH,EAAMwH,QAAQ5M,OAC7B6M,EAAQ,CAAU,GAATF,GACNtO,EAAI,EAAGA,EAAI+G,EAAMwH,QAAQ5M,OAAQ3B,IACxCwO,EAAMrO,KAAKqO,EAAMxO,EAAI,GAAKsO,GAE5B,OACA,sBAAKtH,UAAU,gCAAf,UACE,cAAC6E,EAAD,CACE5E,SAAS,QACTvC,KAAMqC,EAAMwH,QAAQ1M,KAAI,SAAC4M,EAAQzO,GAAT,OACtB,cAAC0O,GAAD,CACED,OAAQA,EACRE,WAAY3O,EACZ4O,UAAW7H,EAAM6H,WAHnB,iBAIiB5O,SAIrB,qBACE6O,MAAM,6BACN7H,UAAU,wBAFZ,SAIGD,EAAM6H,UAAU/M,KAAI,SAACX,EAAMlB,GAAP,OACnB,cAAC8O,GAAD,CACEN,MAAOA,EACPO,MAAO7N,EAAK8N,KAAKnN,KAAI,SAAAoN,GAAI,MAyEtB,GAzE+BA,EAAKC,EAyE9B,MA3EX,oBAGoBlP,YAQ5B,SAAS0O,GAAe3H,GAKtB,OACE,sBAAKC,UAAU,wBAAf,UACGD,EAAM0H,OACN1H,EAAM6H,UAAU/M,KAAI,SAACX,EAAMiO,GAAP,OACnB,qBAAKnI,UAAU,SACbiB,MAAO,CAACmH,KAwDCF,EAxDchO,EAAK8N,KAAKjI,EAAM4H,YAAYO,EA2DrD,GAAN,OAAc,GAAJA,EAAV,OA5DM,mBAIMhO,EAAK8N,KAAKjI,EAAM4H,YAAYU,QAJlC,gBAEgBtI,EAAM4H,WAFtB,YAEoCQ,IAuD5C,IAAmBD,QA/CnB,SAASJ,GAAU/H,GAIjB,IAAMuI,EAAO,CAAIvI,EAAMyH,MAAM,IAAhB,oBAAuBzH,EAAMyH,QACpCe,EAAO,CAAIxI,EAAMgI,MAAM,IAAhB,oBAAuBhI,EAAMgI,QAC1C,OACE,oBAAG/H,UAAU,aAAb,UACGD,EAAMyH,MAAM3M,KAAI,SAAC2N,EAAGxP,GAAJ,OACf,cAACyP,GAAD,CACEC,GAAIJ,EAAQtP,GACZ2P,GAAIJ,EAAQvP,GACZ4P,GAAIJ,EACJK,GAAI9I,EAAMgI,MAAM/O,IAJlB,eAKeA,OAGjB,kCACE8P,cAAc,YACdC,cAAc,MACd3E,KAAK,QACL4E,KAAK,MACLC,GAAG,MACHC,MAAM,KACNC,IAAI,KACJC,YAAY,SAIpB,SAASX,GAAc1I,GACrB,OACE,qCACE,sBAAMC,UAAU,cACd0I,GAAE,UAAK3I,EAAM2I,GAAX,KAAkBC,GAAE,UAAK5I,EAAM4I,GAAX,KACtBC,GAAE,UAAK7I,EAAM6I,GAAX,KAAmBC,GAAE,UAAK9I,EAAM8I,GAAX,OAEzB,wBAAQ7I,UAAU,cAChBqJ,EAAE,IAAIC,GAAE,UAAKvJ,EAAM6I,GAAX,KAAkBW,GAAE,UAAKxJ,EAAM8I,GAAX,U,YCrGpC,SAASW,GAAetO,EAASU,GAG/B,QAAkCgD,IAA9B6K,GAAYvP,KAAKgB,GAEnB,OADA9E,QAAQC,IAAI6E,GACL,8BAAMA,IAEf,IAAMwO,EAAeD,GAAYvP,KAAKgB,GAASyE,KAC3Ca,EAAgBiJ,GAAYE,UAAUD,GAI1C,OAHIA,GAAgBA,EAAe,IACjClJ,EAAgBA,EAAc5E,EAAW,EAAI,IAExC,mBAAGoE,UAAS,UAAKQ,EAAL,YAGrB,SAASoJ,KACP,OAAO,mBAAG5J,UAAU,4BAGtB,SAAS6J,KAEP,OAAO,mBAAG7J,UAAU,sB,MCrBtB,SAAS8J,GAAY/J,GAEnB,IAAMgK,EAAQhK,EAAMgK,OAAS,EAC7B,OACE,qBAAK/J,UAAU,aAAf,SACGgK,MAAMhB,KAAKgB,MAAMD,GAAOE,QAAQpP,KAAI,SAAAxB,GAAG,OACtC,mBAAG2G,UAAU,2BAAb,uBAA4D3G,SAKpE,SAAS6Q,KACP,OACE,qBAAKlK,UAAU,uBAGnB,SAASmK,KACP,OACE,qBAAKnK,UAAU,4CAAf,yBAKJ,SAASoK,GAAgBrK,GAEvB,IAAMgK,EAAQhK,EAAMgK,OAAS,EAC7B,OACE,qBAAK/J,UAAU,aAAf,SACGgK,MAAMhB,KAAKgB,MAAMD,GAAOE,QAAQpP,KAAI,SAAAxB,GAAG,OACtC,mBAAG2G,UAAU,yBAAb,qBAAwD3G,SAKhE,SAASgR,GAAgBtK,GAGvB,OACE,qBAAKC,UAAU,0CAAf,SACGD,EAAMuK,MCTEC,OAhCf,SAAyBC,EAASlN,EAAYpD,EAAMuQ,GA6BlD,OAtBID,OACmB5L,IAAftB,EAEImN,EAASD,UAERlN,EAEDmN,EAAStQ,QAAQD,GAIjBuQ,EAASC,OAAT,mCAAwBxQ,EAAOA,EAAKwF,UAAW,UAGpCd,IAAZ4L,EAEDC,EAASC,OAAT,mCAAwBxQ,EAAOA,EAAKwF,UAAW,KAI/C+K,EAASE,WCarB,SAASC,GAAa1Q,GAGpB,kBAAqBA,EAAK+C,QAA1B,GAAO4N,EAAP,KAAaC,EAAb,KACMC,EAAU,SAAC9R,GACf,MAAO,CACLiP,EAAG,IAAMtL,KAAKuE,MAAM,KAAOlI,EAAI4R,IAASC,EAAOD,IAC/CxC,MAAM,GAAD,OAAKpP,EAAL,WAGT,OACE,cAAC,GAAD,CACEsO,QAASrN,EAAK8C,YACd4K,UAAW,CACT,CAAC5E,MAAO,qBAAOgF,KAAM9N,EAAK+B,MAAMpB,KAAI,SAAA5B,GAAC,OAAI8R,EAAQ9R,OACjD,CAAC+J,MAAO,qBAAOgF,KAAM9N,EAAK8B,MAAMnB,KAAI,SAAA5B,GAAC,OAAI8R,EAAQ9R,UAKzD,SAAS+R,GAAkBtL,GAEzB,IAAM4K,EACJ,qCACGV,KACAlK,KAGL,OACE,cAAC2K,GAAD,CAAiBC,IAAKA,IAG1B,SAASW,KACP,OACE,cAACZ,GAAD,CAAiBC,IAAI,qDAGzB,SAASY,KACP,OACE,cAACf,GAAD,IAIWgB,OA7Ef,SAA4BpL,GAK1B,IAAMqL,EAAab,GACjBxK,EAAMyK,QACNzK,EAAMzC,WACNyC,EAAM7F,KAAO6F,EAAM7F,KAAKkB,KAAM,KAC9B,CACEuP,QAASM,GACT9Q,QAASyQ,GACTF,OAAQM,GACRR,QAASU,KAGb,OACE,yBAAS1E,GAAG,eAAexG,UAAU,UAArC,SACE,cAAC,GAAD,CACEC,SAAS,gBACTG,QACE,qCACE,0EAGCgL,KAGL/E,YAAY,OCGpB,SAASgF,GAAanR,GAGpB,SAASoR,EAAW3R,GAClB,OACE,qCACE,cAACsL,GAAD,CACEjC,MAAO,mBAAGhD,UAAU,mBACpBI,QAAO,wBAASzG,EAAE4B,SAAX,QAET,cAAC0J,GAAD,CACEjC,MAAO,mBAAGhD,UAAU,wBACpBI,QAAO,wBAASzG,EAAEwB,SAAX,WAKf,SAASoQ,EAAU5R,GACjB,OACE,qCACGA,EAAEuB,QACH,cAAC+J,GAAD,CACEjC,MAAO,sBAAMhD,UAAU,KAAhB,SAAsBrG,EAAEyB,OAC/BgF,QAAO,gBAAQzG,EAAE0B,WAKzB,OACEnB,EAAKW,KAAI,SAAAlB,GAAC,MAAK,CACb+M,WAAY/M,EAAEe,KACd0F,QAASkL,EAAW3R,GACpBiN,IAAK4C,GAAe7P,EAAEuB,QAASvB,EAAEiC,UACjC+K,QAAS4E,EAAU5R,OAIzB,SAAS6R,GAAkB9L,GAEzB,MAAQ,CAAC,CACPgH,WAAY,KACZtG,QAAS,cAACgK,GAAD,CAAiBL,MAAO,IACjCnD,IAAKgD,KACLjD,QAASjH,IAGb,SAAS+L,KACP,MAAQ,CAAC,CACP/E,WAAY,KACZtG,QAAS,cAACgK,GAAD,CAAiBL,MAAO,IACjCnD,IAAKiD,KACLlD,QAAS,qDAGb,SAAS+E,KACP,MAAQ,CAAC,CACPhF,WAAY,cAACoD,GAAD,IACZ1J,QAAS,cAAC0J,GAAD,CAAaC,MAAO,IAC7BnD,IAAK,cAACsD,GAAD,IACLvD,QAAS,gBAIEgF,OA9Ff,SAA4B5L,GAM1B,IAAMqL,EAAab,GACjBxK,EAAMyK,QACNzK,EAAMzC,WACNyC,EAAM7F,KACN,CACEyQ,QAASc,GACTtR,QAASkR,GACTX,OAAQc,GACRhB,QAASkB,KAEb,OACE,yBAASlF,GAAG,eAAexG,UAAU,UAArC,SACE,cAACyG,GAAD,CACErG,QAASgL,EAAWvQ,KAAI,SAAAlB,GAAC,MAAK,CAC5B4D,KAAM,uBACNmJ,WAAY/M,EAAE+M,WACdtG,QAASzG,EAAEyG,QACXwG,IAAKjN,EAAEiN,IACPD,QAAShN,EAAEgN,iBC8BrB,SAASiF,GAAYC,GAOnB,IAFA,IAAM3R,EAAO2R,EAAanP,eACpBoP,EAAiB,GANS,WAOvB9S,GACP,IAAMvC,EAAM,CACVqC,IAAK,CAACoC,QAAS,IAAKC,SAAU,KAC9B4Q,MAAO,CAAC7Q,QAAS,IAAKC,SAAU,MAElC,GAAIjB,EAAKlB,GAAG,CACV,IAAMgT,EAAI9R,EAAKlB,GACf,CAAC,MAAO,SAASkD,SAAQ,SAAAO,GACnBuP,EAAEvP,KACJhG,EAAIgG,GAAUvB,QAAU8Q,EAAEvP,GAAUvB,QACpCzE,EAAIgG,GAAUtB,SAAW6Q,EAAEvP,GAAUtB,aAI3C2Q,EAAe3S,KAAK1C,IAdbuC,EAAI,EAAGA,EAAI,EAAGA,IAAK,EAAnBA,GAgBT,OACE8S,EAAejR,KAAI,SAACmR,EAAGhT,GAAJ,OACjB,cAACiT,GAAD,CACIC,YAAaF,GADjB,yBAE2BhT,OAKjC,SAASmT,GAAkBzM,GAQzB,IANA,IAAMoM,EAAiB,GACjBM,EACJ,cAAC/B,GAAD,CACEC,IAAG,4DAAe5K,KAGb1G,EAAI,EAAGA,EAAI,EAAGA,IACrB8S,EAAe3S,KACbiT,GAGJ,OAAON,EAET,SAASO,KAGP,IAFA,IAAMP,EAAiB,GACjBQ,EAAc,cAACjC,GAAD,CAAiBC,IAAG,qDAC/BtR,EAAI,EAAGA,EAAI,EAAGA,IACrB8S,EAAe3S,KACbmT,GAGJ,OAAOR,EAET,SAASS,KAGP,IAFA,IAAMT,EAAiB,GACjBQ,EAAc,cAACpC,GAAD,IACXlR,EAAI,EAAGA,EAAI,EAAGA,IACrB8S,EAAe3S,KACbmT,GAGJ,OAAOR,EAGT,SAASU,GAAatS,GAEpB,IAAMuS,EAAe,GAErBvS,EAAKwD,KAAKxB,SAAQ,SAAAwQ,GAChBA,EAAW1O,WAAW9B,SAAQ,SAAAjD,GAC5B,IAAIkF,EAAMlF,EAAEkG,QACgD,UAAxDlG,EAAEV,aAAauD,UAAU7C,EAAEV,aAAaoC,OAAS,IACnDwD,IAEF,IAAK,IAAID,EAAQjF,EAAEmG,UAAWlB,EAAQC,EAAKD,IACnCuO,EAAavO,KACjBuO,EAAavO,GAAS,IAGxBuO,EAAavO,GAAOjF,EAAEV,cAAgB,CACpCmU,WAAYA,EACZnU,aAAcU,EAAEV,oBAjBC,eAsBhBoU,GACPF,EAAaE,GACX,qBAAK3M,UAAU,oBAAf,SACG4M,OAAO3C,KAAKwC,EAAaE,IAASE,OAAOhS,KAAI,SAACtC,EAAcS,GAAf,OAC5C,cAAC8T,GAAD,CACEJ,WAAYD,EAAaE,GAAQpU,GAAcmU,WAC/CnU,aAAcA,GAFhB,gBAGgBS,UAPxB,IAAK,IAAI2T,KAAUF,EAAc,EAAxBE,GAaT,MAAO,CACLI,cAAe7S,EAAKqD,KACpBkP,gBAGJ,SAASO,GAAmBtN,GAgB1B,IAdA,IAAM+M,EAAe,GACf7O,EACJ,cAACsJ,GAAD,CACEjH,SAAS,aACTE,KAAM,KACNiH,OAAQ,KACRD,KACE,cAAClC,GAAD,CACEjC,MAAO4G,KACPxJ,QAASV,MAKR1G,EAAI,EAAGA,EAAI,EAAGA,IACrByT,EAAazT,GAAK4E,EAEpB,MAAO,CACLmP,cAAerN,EACf+M,gBAGJ,SAASQ,KAeP,IAdA,IAAMR,EAAe,GACf7O,EACJ,cAACsJ,GAAD,CACEjH,SAAS,aACTE,KAAM,KACNiH,OAAQ,KACRD,KACE,cAAClC,GAAD,CACEjC,MAAO6G,KACPzJ,QAAQ,qBAKPpH,EAAI,EAAGA,EAAI,EAAGA,IACrByT,EAAazT,GAAK4E,EAEpB,MAAO,CACLmP,cAAe,iBACfN,gBAGJ,SAASS,KAUP,IATA,IAAMT,EAAe,GACf7O,EACJ,cAACsJ,GAAD,CACEjH,SAAS,aACTE,KAAM,KACNiH,OAAQ,KACRD,KAAM,cAAC+C,GAAD,MAGDlR,EAAI,EAAGA,EAAI,EAAGA,IACrByT,EAAazT,GAAK4E,EAEpB,MAAO,CACLmP,cAAe,iBACfN,gBAIJ,SAASU,GAAiBpN,GAIxB,IAAMiD,EACJ,sBAAKhD,UAAU,QAAf,UACE,oBAAIA,UAAU,QAAd,SACGD,EAAMrF,OAERqF,EAAM7E,WAGX,OACE,cAAC+L,GAAD,CACEhH,SAAS,oBACT+C,MAAOA,EACP5C,QAASL,EAAMqN,WAIrB,SAASnB,GAAqBlM,GAI5B,OACA,qBAAKC,UAAU,aAAf,SACG,CAAC,MAAO,SAASnF,KAAI,SAAC4B,EAAUzD,GAAX,OACpB,sBAAKgH,UAAU,0BAAf,UAGGwJ,GAAezJ,EAAMmM,YAAYzP,GAAUvB,QAAe,IAANlC,GAHvD,UAIM+G,EAAMmM,YAAYzP,GAAUtB,SAJlC,yBACiBnC,SASvB,SAAS8T,GAAmB/M,GAI1B,IAAMlC,EAAakC,EAAM2M,WAAW7O,WAC9BwP,EAAatN,EAAMxH,aACnB+U,EAAiBvN,EAAM2M,WAAWlS,SAGxC,OACE,cAAC0M,GAAD,CACEjH,SAAS,aACTE,KALS,WAAMzI,OAAO6V,KAAKxN,EAAM2M,WAAW5O,KAAM,WAMlDqJ,KAAMtJ,EACNuJ,OACE,qCACA,cAACnC,GAAD,CACEjC,MAAO,mBAAGhD,UAAU,gBACpBI,QAASiN,IAEX,cAACpI,GAAD,CACEjC,MAAO,mBAAGhD,UAAU,kBACpBI,QAASkN,GAAkB,kCAOrC,SAASE,GAAqBzN,GAE5B,IAAMhK,EAeR,SAA+BkD,GAE7B,MAA4B,CAACA,EAAEwU,cAAexU,EAAEN,WAAa,EAAGM,EAAEJ,WAA3D6U,EAAP,KAAahV,EAAb,KAAoBE,EAApB,KACA,MAAM,kDAAN,OAAyD8U,EAAzD,YAAiEhV,EAAjE,YAA0EE,GAlB9D+U,CAAsB5N,EAAMnH,MACxC,OACE,cAACsO,GAAD,CACEjH,SAAS,aACTE,KAAM,WAAMzI,OAAO6V,KAAKxX,EAAK,WAC7BoR,KACE,cAAClC,GAAD,CACEjC,MAAO6G,KACPzJ,QAAQ,8DAGZgH,OAAQ,OASCwG,OA3Tf,SAAyB7N,GAOvB,IAAM8N,EAAetD,GACnBxK,EAAM7E,QAAQsP,QACdzK,EAAM7E,QAAQoC,WACdyC,EAAM7E,QAAQhB,KAAd,KAA4B6F,EAAM7E,QAAQhB,KAAd,KAA6B,KACzD,CACEC,QAASyR,GACTjB,QAAS0B,GACT7B,QAAS+B,GACT7B,OAAQyB,KAGN2B,EAAgBvD,GACpBxK,EAAMqN,SAAS5C,QACfzK,EAAMqN,SAAS9P,WACfyC,EAAMqN,SAASlT,KACf,CACEC,QAASqS,GACT7B,QAASsC,GACTzC,QAAS0C,GACTxC,OAAQsC,KAIZ,OACE,yBAASxG,GAAG,mBACVxG,UAAU,UADZ,SAGE,cAAC,GAAD,CACEzC,KAAK,gBACL+I,SAAU,GACVlG,QAAS9H,EAAeuC,KAAI,SAACvB,EAAIN,GAAL,OAC1B,cAACmU,GAAD,CACEzS,KAAMpB,EAAGf,aACT2C,QAAS2S,EAAa7U,GACtBoU,SACEU,EAAcrB,aAAazT,IAC3B,cAACwU,GAAD,CAAsB5U,KAAMU,EAAGb,YALnC,kBAOkBO,Y,YC4Bb+U,OArEf,WAGE,MAA0BlM,IAAMC,SAAS1J,KAAKC,OAA9C,mBAAO6F,EAAP,KAAc8P,EAAd,KACA,EAA6BnM,IAAMC,SAAS,IAA5C,mBAAO5K,EAAP,KAAgB2O,EAAhB,KACA,EAAqChE,IAAMC,SAAS,IAApD,mBAAO3K,EAAP,KAAoB2O,EAApB,KACA,EAA0CjE,IAAMC,UAAS,GAAzD,mBAAOmE,EAAP,KAAyBF,EAAzB,KAEA,ECmBF,SAA4B7O,EAASC,EAAa4D,EAAWkL,GAO3D,MAAwBpE,IAAMC,SAAS,IAAvC,mBAAO5H,EAAP,KAAa+T,EAAb,KACA,EAA8BpM,IAAMC,UAAS,GAA7C,mBAAO0I,EAAP,KAAgB0D,EAAhB,KA2BA,OA1BArM,IAAMsM,WAAU,WAAM,4CACpB,8BAAA3Y,EAAA,sEAEI0Y,GAAW,GACXD,EAAQ,CAAC3Q,gBAAYsB,IACfwP,EAAU,OAAYrT,EAJhC,SAKsB9D,EAChBC,EACAC,EACA,IAAIiB,KAAK2C,GAAWsT,cACpB,IAAIjW,KAAKgW,GAASC,cAClBpI,GAVN,OAKUxP,EALV,OAYIwX,EAAQ5Q,EAAc5G,IAZ1B,kDAeIL,QAAQC,IAAR,MACA6X,OAAWtP,GACXqP,EAAQxO,EAAsB,EAAD,KAjBjC,2DADoB,sBAqBhB1E,GArBiB,WAAD,wBAsBlBuT,KAED,CAACpX,EAASC,EAAa4D,EAAWkL,IAE9B,CAAC/L,EAAMsQ,GDtD4B+D,CAAmBrX,EAASC,EAAa+G,EAAO+H,GAA1F,mBAAOuI,EAAP,KAAsBC,EAAtB,KAGA,EAAwB5M,IAAMC,SAAS,IAAvC,mBAAOxM,EAAP,KAAa6P,EAAb,KACA,EAAwBtD,IAAMC,SAAS,IAAvC,mBAAOvM,EAAP,KAAa6P,EAAb,KACA,ECdF,SAA8B9P,EAAMC,EAAMwF,GAExC,MAAwB8G,IAAMC,SAAS,IAAvC,mBAAO5H,EAAP,KAAa+T,EAAb,KACA,EAA8BpM,IAAMC,UAAS,GAA7C,mBAAO0I,EAAP,KAAgB0D,EAAhB,KAsBA,OArBArM,IAAMsM,WAAU,WAAM,4CACpB,gCAAA3Y,EAAA,sEAEI0Y,GAAW,GACXD,EAAQ,CAAC3Q,gBAAYsB,IAHzB,SAKmCvJ,EAAkBC,EAAMC,GAL3D,cAKUmZ,EALV,gBAMmC3X,EAAkBzB,EAAMC,GAN3D,OAMUoZ,EANV,OAOUC,EAAa7U,EAAa2U,EAAkBC,GAClDV,EAAQW,GARZ,kDAWIV,OAAWtP,GACXqP,EAAQpO,EAAqB,EAAD,KAZhC,2DADoB,sBAgBP,KAATvK,GAAwB,KAATC,GAhBE,WAAD,wBAiBlBsZ,KAED,CAACvZ,EAAMC,EAAMwF,IAET,CAACb,EAAMsQ,GDX0BsE,CAAqBxZ,EAAMC,EAAM2I,GAAzE,mBAAO6Q,EAAP,KAAqBC,EAArB,KAEA,EAAqCnN,IAAM2D,SAAQ,iBAAK,CACtD,cAAC,GAAD,CACEgF,QAASwE,EACT9U,KAAM6U,EAAa,QACnBzR,WAAYyR,EAAazR,aAE3B,cAAC,GAAD,CACEkN,QAASwE,EACT9U,KAAM6U,EAAY,KAClBzR,WAAYyR,EAAazR,gBAE1B,CAACyR,EAAcC,IAXlB,mBAAO3D,EAAP,KAAqBT,EAArB,KAaMqE,EAAWpN,IAAM2D,SAAQ,kBAC7B,cAAC,GAAD,CACE4H,SAAU,CACR5C,QAASiE,EACTnR,WAAYkR,EAAclR,WAC1BpD,KAAMsU,GAERtT,QAAS,CACPsP,QAASwE,EACT1R,WAAYyR,EAAazR,WACzBpD,KAAM6U,OAGV,CAACA,EAAcC,EAAiBR,EAAeC,IAKjD,OACE,sBAAKzO,UAAU,MAAf,UACE,iCACE,cAAC,GAAD,CACEmF,QAASA,EACTC,QAASA,EACTS,UAAWA,EACXC,cAAeA,EACfC,cAAeA,EACfG,WAZW,WACjB8H,EAAS5V,KAAKC,YAcZ,uBAAMmO,GAAG,WAAT,UACE,0BAASA,GAAG,cAAcxG,UAAU,UAApC,UACGqL,EACAT,KAEFqE,SE9DMC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.7a1984e1.chunk.js","sourcesContent":["import {default as WeatherAPI} from '../datastore/WeatherAPI.json';\r\nimport {default as CalendarAPI} from '../datastore/GoogleCalendarAPI.json';\r\nimport {default as CalendarExample} from '../datastore/ExampleData_CalendarAPI.json';\r\n\r\n// fetching Weather data\r\n// all encoding is based on WeatherAPI(v1)\r\nasync function fetchWeather_3day(city, town){\r\n  // city, town: string of name\r\n  const city_code = String(WeatherAPI.city_data[city].code_3day\r\n                    ).padStart(3, \"0\");\r\n  const url = `${WeatherAPI.base_url}${WeatherAPI.city_baseCode}${city_code}?Authorization=${WeatherAPI.authorization}&locationName=${town}&elementName=${WeatherAPI.select_3day}&sort=time`;\r\n  console.log(url);\r\n\r\n  const myRequest = new Request(url);\r\n  const res = await fetch(myRequest);\r\n  if (res.ok){\r\n    return res.json();\r\n  }\r\n  return Promise.reject(new Error('failed to fetch'));\r\n}\r\n\r\nasync function fetchWeather_week(city, town){\r\n  // city, town: string of name\r\n  // code_7day = code_3day + 2\r\n  const city_code = String(WeatherAPI.city_data[city].code_3day\r\n                    + 2 ).padStart(3, \"0\");\r\n  const url = `${WeatherAPI.base_url}${WeatherAPI.city_baseCode}${city_code}?Authorization=${WeatherAPI.authorization}&locationName=${town}&elementName=${WeatherAPI.select_week}&sort=time`;\r\n  console.log(url);\r\n\r\n  const myRequest = new Request(url);\r\n  const res = await fetch(myRequest);\r\n  if (res.ok){\r\n    return res.json();\r\n  }\r\n  return Promise.reject(new Error('failed to fetch'));\r\n}\r\n\r\n// fetch Calendar API\r\nasync function fetchCalendar(api_key, calendar_id, time_min, time_max, use_example_data=true){\r\n  // api_key, calendar_id: essential string for authorization,\r\n  // see google api for more info \r\n  // time_min, time_max: string of date object\r\n  // for this app, we fetch the data of the current week\r\n  \r\n  // fetching api is ..... expensive, this is only for test and display\r\n  if (use_example_data){\r\n    return CalendarExample;\r\n  }\r\n\r\n  return new Promise((resolve, reject)=>{    \r\n    const url = `${CalendarAPI.base_url}${calendar_id}/events?timeMax=${time_max}&timeMin=${time_min}`;\r\n    console.log(url);\r\n    let gapi;\r\n    try{\r\n      gapi = window.gapi;\r\n    }\r\n    catch(error){\r\n      reject({\r\n        status: error,\r\n        statusText: \"failed to fetch\"\r\n      });\r\n    }\r\n    async function start() {\r\n      await gapi.client.init({\r\n        'apiKey': api_key\r\n      });\r\n      const res = gapi.client.request({\r\n        'path': url,\r\n      });\r\n      try {\r\n        resolve(res);\r\n      }\r\n      catch(error){\r\n        reject({\r\n          status: error,\r\n          statusText: \"error\"\r\n        });\r\n      }\r\n    }\r\n    gapi.load('client', start);\r\n  });\r\n}\r\n\r\nexport {\r\n  fetchWeather_3day, fetchWeather_week, fetchCalendar\r\n};","/*------ get time infos of the current week ------*/\r\nconst day_msecs = 86400000;\r\nconst now_date = new Date(Date.now());\r\nconst week_time_list = [\r\n  {\r\n    display_time: getFormatDateString(now_date, true, true, false),\r\n    date_obj: now_date,\r\n    month: now_date.getMonth(),\r\n    date: now_date.getDate(),\r\n    day: now_date.getDay()\r\n  }\r\n];\r\nfor (let i = 1; i < 7; i++){\r\n  const t = new Date(week_time_list[i - 1].date_obj.valueOf() + day_msecs);\r\n  week_time_list.push({\r\n    display_time: getFormatDateString(t, true, true, false),\r\n    date_obj: t,\r\n    month: t.getMonth(),\r\n    date: t.getDate(),\r\n    day: t.getDay()\r\n  });\r\n}\r\n\r\nfunction getWeekListIdxByDate(date_obj){\r\n  // date_obj: date object\r\n  // return: int 0-6 represent where's the date obj in week_time_list\r\n  // -1 if not found\r\n  const [month, date] = [date_obj.getMonth(), date_obj.getDate()];\r\n  for(let idx = 0; idx < 7; idx++) {\r\n    const wt = week_time_list[idx];\r\n    if (wt.date === date && wt.month === month){\r\n      return date_obj - wt.date_obj < day_msecs ? idx : -1;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction getFormatDateString(date_obj, show_date, show_day, show_time){\r\n  // show_date/day/time: bool indicate if needs date/day/time\r\n\r\n  const weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  let res = \"\";\r\n  if (show_date){\r\n    // month is from 0 - 11 \r\n    const m = date_obj.getMonth() + 1;\r\n    const d = date_obj.getDate();\r\n    res += `${m < 10 ? '0' + m: m}.${d < 10 ? '0' + d: d} `;\r\n  }\r\n  if (show_day){\r\n    res += `${weekday[date_obj.getDay()]} `;\r\n  }\r\n  if (show_time){\r\n    const h = date_obj.getHours();\r\n    const m = date_obj.getMinutes();\r\n    res += `${h < 10 ? '0' + h: h} : ${m < 10 ? '0' + m: m} `;\r\n  }\r\n  return res;\r\n}\r\n\r\nexport {day_msecs, week_time_list, getWeekListIdxByDate, getFormatDateString};","import {\r\n  day_msecs, week_time_list, \r\n  getWeekListIdxByDate, getFormatDateString\r\n} from '../data_process_functions/handleDatefunctions';\r\n\r\n// unfortunately, eath data has different format and length...\r\nfunction parseWeather(rawdata_3day, rawdata_week){\r\n  // rawdata: unparsed JSON\r\n  // return: object of weather element\r\n  let res = {};\r\n  try{\r\n    res[\"3day\"] = parseWeather3Day(rawdata_3day);\r\n    res[\"week\"] = parseWeatherWeek(rawdata_week);\r\n    res[\"is_success\"] = true;\r\n  }\r\n  catch(error){\r\n    console.log(error);\r\n    res[\"is_success\"] = false;\r\n  }\r\n  return res;\r\n}\r\nfunction parseWeather3Day(data){\r\n  // data: parsed JSON\r\n  // return object\r\n  if (data.success !== \"true\"){\r\n    return new TypeError(\"fetch is not success\");\r\n  }\r\n  const town_data = data.records.locations[0].location[0].weatherElement;\r\n\r\n  if (town_data[0].time.length === 0){\r\n    return new RangeError(\"no data\");\r\n  }\r\n\r\n  // town_data = [ WeatherDescription ]\r\n  const res = town_data[0].time.map(wt => {\r\n    const time = parseWeatherTime(wt.startTime);\r\n    const display_time = `${time.display_date} ${time.hr} ~ ${time.hr + 3}時`;\r\n    \r\n    let [weather, rain_pro, temp, feel, wind, humidity] = [];\r\n    const multi_weather_data = wt.elementValue[0].value.split(\"。\");\r\n    \r\n    // API will not have rain probability data if it's 0%.\r\n    if (multi_weather_data.length === 7){\r\n      [weather, rain_pro, temp, feel, wind, humidity] = multi_weather_data; \r\n    }\r\n    else {\r\n      [weather, temp, feel, wind, humidity] = multi_weather_data;\r\n      rain_pro = \" 0\";\r\n    }\r\n\r\n    return {\r\n      time: display_time,\r\n      is_night: time.is_night,\r\n      weather,\r\n      rain_pro: rain_pro.split(\" \")[1].replace(\"%\", \"\"),\r\n      temp: temp.substring(4).replace(\"度\", \"\"),\r\n      humidity: humidity.substring(4).replace(\"%\", \"\"),\r\n      feel,\r\n      wind\r\n    };\r\n  });\r\n  return res;\r\n}\r\nfunction parseWeatherWeek(data){\r\n  // data: parsed JSON\r\n  // return object, each keys\r\n  // weather_by_idx: object of weather by week idx, includes keys:\r\n  // day, night of {weather, weather_point, rain_pro}\r\n  // temp: temperature data \r\n  // t_min, t_max: array of int\r\n  // data: parsed JSON\r\n  // return object\r\n\r\n  if (data.success !== \"true\"){\r\n    return new TypeError(\"fetch is not success\");\r\n  }\r\n  const [rain_pro, weather, t_min, t_max] = data.records.locations[0].location[0].weatherElement;\r\n\r\n  if (rain_pro.time.length === 0){\r\n    return new RangeError(\"no data\");\r\n  }\r\n  const res = {\r\n    \"weather_by_idx\": {},\r\n    \"temp\": {\r\n      \"display_day\": [],\r\n      \"t_min\": [],\r\n      \"t_max\": [],\r\n      \"t_range\": [100, -100]\r\n    }\r\n  };\r\n  rain_pro.time.forEach((wt, i)=> {\r\n    const rain_pro = parseInt(wt.elementValue[0].value) || 0;\r\n    const w_pheno = weather.time[i].elementValue[0].value;\r\n    const w_point = weather.time[i].elementValue[1].value;\r\n    const min_t = t_min.time[i].elementValue[0].value;\r\n    const max_t = t_max.time[i].elementValue[0].value;\r\n\r\n    const time = parseWeatherTime(wt.startTime);\r\n    const idx = getWeekListIdxByDate(time.time_stamp);\r\n    if (idx !== -1){\r\n      const day_span = time.is_night ? \"night\": \"day\";\r\n      // same day\r\n      if (res.weather_by_idx[idx]){\r\n        // different day span, add new values\r\n        if (! res.weather_by_idx[idx][day_span]){\r\n          res.weather_by_idx[idx][day_span] = {\r\n            weather: w_pheno,\r\n            weather_point: w_point,\r\n            rain_pro: rain_pro\r\n          };\r\n        }\r\n        // find max value in same day span\r\n        if (res.weather_by_idx[idx][day_span].weather_point < w_point){\r\n          res.weather_by_idx[idx][day_span].weather_point = w_point;\r\n          res.weather_by_idx[idx][day_span].weather = w_pheno;\r\n        }\r\n        res.weather_by_idx[idx][day_span].rain_pro = \r\n        Math.max(res.weather_by_idx[idx][day_span].rain_pro, rain_pro);\r\n\r\n        // find max value in same day\r\n        const last = res.temp.t_min.length - 1;\r\n        res.temp.t_min[last] = Math.min(res.temp.t_min[last], min_t);\r\n        res.temp.t_max[last] = Math.max(res.temp.t_max[last], max_t);\r\n      }\r\n      // new day\r\n      else {\r\n        res.weather_by_idx[idx] = {};\r\n        res.weather_by_idx[idx][day_span] = {\r\n          weather: w_pheno,\r\n          weather_point: w_point,\r\n          rain_pro: rain_pro\r\n        };\r\n        // only use day\r\n        res.temp.display_day.push(time.display_date.split(\" \")[1]);\r\n        res.temp.t_min.push(min_t);\r\n        res.temp.t_max.push(max_t);\r\n      }\r\n      res.temp.t_range[0] = Math.min(res.temp.t_range[0], min_t);\r\n      res.temp.t_range[1] = Math.max(res.temp.t_range[1], max_t);\r\n    }\r\n  });\r\n\r\n  return res;\r\n}\r\nfunction parseWeatherTime(date_str){\r\n  const parsed = new Date(date_str);\r\n  const hr = parsed.getHours();\r\n\r\n  return {\r\n    time_stamp: parsed,\r\n    hr: hr,\r\n    display_date: getFormatDateString(parsed, true, true, false),\r\n    is_night: hr >= 18 || hr < 6\r\n  };\r\n}\r\n\r\n\r\nfunction parseCalendar(data){\r\n  // data: parsed JSON\r\n  // return: object\r\n  // console.log(data);\r\n  try{ \r\n    const res = {\r\n      is_success: true,\r\n      name: data.result.summary,\r\n      list: data.result.items.map(item => ({\r\n        event_name: item.summary,\r\n        location: item.location,\r\n        link: item.htmlLink,\r\n        time_spans: parseCalendarTimeSpan(item.start, item.end, item.recurrence)\r\n      }))\r\n    };\r\n    return res;\r\n  }\r\n  catch (error){\r\n    console.log(error);\r\n    return {\r\n      is_success: false\r\n    };\r\n  }\r\n}\r\nfunction parseCalendarTimeSpan(start, end, recurrence){\r\n  // start, end: string that presents time\r\n  // recurrence: array contains string represents recurrence rule\r\n  // see api reference for detail\r\n  const [parsed_start, parsed_end] = [start, end].map(t => parseCalendarTime(t));\r\n  const delta_time = parsed_end - parsed_start;\r\n  const time_spans = [];\r\n  week_time_list.forEach((wt, i) => {\r\n    const match_date = TryMatchRecurrenceRule(wt, parsed_start, recurrence);\r\n    if (match_date !== false){\r\n      const end_date = new Date(match_date + delta_time);\r\n      const end_idx = getWeekListIdxByDate(end_date);\r\n      time_spans.push({\r\n        start_idx: i,\r\n        end_idx: end_idx === -1 ? 7: end_idx,\r\n        display_time: \r\n          getFormatDateString(new Date(match_date), true, true, true) + \" ~ \" +\r\n          getFormatDateString(end_date, true, true, true)\r\n      });\r\n    }\r\n  });\r\n  return time_spans;\r\n}\r\nfunction TryMatchRecurrenceRule(T, target, recurrence){\r\n  // T: item of week_time_list\r\n  // object contains date object, date, month, day\r\n  // target: reference date object\r\n  // recurrence: arr of str or null\r\n  // try if T matches the recurrence rule by compared to target\r\n  // if so, return timestamp that has same hours and min to target\r\n  // otherwise false\r\n  const [month, date, day] = [target.getMonth(), target.getDate(), target.getDay()];\r\n  if (recurrence === undefined){\r\n    if (month === T.month && date === T.date & target - T.date_obj < day_msecs){\r\n      return getSameTimeStamp(T.date_obj, target);\r\n    }\r\n    return false;\r\n  }\r\n  let valid = false;\r\n  for (let rule of recurrence){\r\n    if (rule.includes(\"BYDAY\") && T.day === day){\r\n      valid = true; break;\r\n    }\r\n    else if (rule.includes(\"BYMONTH\") && T.date === date){\r\n      valid = true; break;\r\n    }\r\n    else if (rule.includes(\"BYYEARDAY\") && T.date === date && T.month === month){\r\n      valid = true; break;\r\n    }\r\n    else if (rule.includes(\"DAILY\")){\r\n      valid = true; break;\r\n    }\r\n  }\r\n  return valid ? getSameTimeStamp(T.date_obj, target): false;\r\n}\r\nfunction parseCalendarTime(api_time_obj){\r\n  // api_timeobj: object that presents time and date\r\n  // contains date string\r\n  // time has different format for whole day event and not whole day event\r\n  const parsed = api_time_obj.date ?\r\n   new Date(api_time_obj.date + \"T00:00:00\") :\r\n   new Date(api_time_obj.dateTime);\r\n  return parsed;\r\n}\r\nfunction getSameTimeStamp(d_source, d_target){\r\n  // d_source, d_target: date object\r\n  d_source.setHours(d_target.getHours());\r\n  d_source.setMinutes(d_target.getMinutes());\r\n  return d_source.valueOf();\r\n}\r\n\r\nexport {parseWeather, parseCalendar};","function CalendarFetchErrorMsg(error){\r\n  // error: received object from google api\r\n  return {\r\n    error_msg:\r\n    `${error.result.error.code}: ${error.result.error.message}`\r\n  };\r\n}\r\nfunction WeatherFetchErrorMsg(error){\r\n  // error: received object from google api\r\n  return {\r\n    \"3day\": {error_msg: error},\r\n    \"week\": {error_msg: error}\r\n  };\r\n}\r\n\r\nexport {CalendarFetchErrorMsg, WeatherFetchErrorMsg};","import './ButtonComponent.css';\r\n\r\nfunction ButtonComponent(props){\r\n  // props: cls_name, func, content\r\n  // cls_name: string of additional classname\r\n  // func: function that to display when cliking it\r\n  // content: jsx being wrapped\r\n  return (\r\n    <div className={`btn fx jsc fg1 circle_side ${props.cls_name || \"\"}`}\r\n      onClick={props.func}\r\n    >\r\n      {props.content}\r\n    </div>\r\n  );\r\n}\r\nfunction CircleButtonComponent(props){\r\n  // props: cls_name, func, icon_cls_name, is_disable\r\n  // cls_name: string of additional classname\r\n  // icon_cls_name: string, bootstrap classname\r\n  // func: function that to display when cliking it\r\n  // is_disable: bool indicates the status of the button\r\n  const disabled = props.is_disable === undefined ? \"false\": props.is_disable;\r\n  return (\r\n    <i className={`bi bi-${props.icon_cls_name} disable-${disabled} circle_btn fx jsc circle shadow ${props.cls_name || \"\"}`}\r\n      onClick={props.func}\r\n    />\r\n  );\r\n}\r\nfunction IconTitleButtonComponent(props){\r\n  // props: icon_cls_name, content, cls_name, func\r\n  // icon_cls_name: string of used icon classname in bootstrap\r\n  // content: string as the button description\r\n  // cls_name: string of additional classname\r\n  // func: function that to display when cliking it\r\n  return (\r\n    <div className={`btn fx dh jsc fg1 circle_side g10 ${props.cls_name || \"\"}`}\r\n      onClick={props.func}\r\n    >\r\n      <i className={`bi bi-${props.icon_cls_name} bf fx jsc`}/>\r\n      {props.content}\r\n    </div>\r\n  );\r\n\r\n}\r\nfunction ToggleButtonComponent(props){\r\n  // props: cls_name, func, content, is_checked\r\n  // cls_name: string of additional classname\r\n  // func: function that to display when cliking it\r\n  // content: string as the button description\r\n  // is_toggled: bool indicates the status of the button\r\n  return (\r\n    <div className={`fx dh fg1 g10 ${props.cls_name || \"\"}`}\r\n      onClick={props.func}\r\n    >\r\n      <div className={`slider-${props.is_toggled} circle_side`}>\r\n        <span className={`toggled-${props.is_toggled} circle_btn btn fx jsc circle shadow_small`}/>\r\n      </div>\r\n      {props.content} \r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport {ButtonComponent, CircleButtonComponent, IconTitleButtonComponent, ToggleButtonComponent};","function FadeInEffect(ref_obj){\r\n  // ref: react useref object\r\n  const effect_func = (elapsed) => {\r\n    ref_obj.current.style.opacity = `${Math.floor(elapsed / 5)}%`;\r\n  }\r\n  makeAnimate(effect_func);\r\n}\r\n\r\nfunction FadeOutEffect(ref_obj){\r\n  // ref: react useref object\r\n  const effect_func = (elapsed) => {\r\n    ref_obj.current.style.opacity = `${Math.floor(100 - elapsed / 5)}%`;\r\n  }\r\n  makeAnimate(effect_func);\r\n  flipEffect(ref_obj);\r\n}\r\nfunction flipEffect(ref_obj){\r\n  const effect_func = (elapsed) => {\r\n    ref_obj.current.style.transform = `rotateY(${Math.floor((elapsed / 5) * 3.6)}deg)`;\r\n  }\r\n  makeAnimate(effect_func);\r\n}\r\nfunction showContentEffect(ref_obj){\r\n  const effect_func = (elapsed) => {\r\n    const delta = Math.floor(elapsed / 5);\r\n    ref_obj.current.style.clipPath = delta === 100 ? \"none\" : GetClipPath(delta);\r\n  }\r\n  makeAnimate(effect_func);\r\n}\r\nfunction hideContentEffect(ref_obj){\r\n  const effect_func = (elapsed) => {\r\n    const delta = Math.floor(100 - elapsed / 5);\r\n    ref_obj.current.style.clipPath = delta === 100 ? \"none\" : GetClipPath(delta);\r\n  }\r\n  makeAnimate(effect_func);\r\n}\r\nfunction GetClipPath(d){\r\n  return `ellipse(${d}% ${d}% at 0% 0%)`;\r\n}\r\n\r\nfunction makeAnimate(effect_func){\r\n  // effect_func: function that present effect\r\n\r\n  let start;\r\n  function makeEffect(timestamp){\r\n    if (start === undefined){\r\n      start = timestamp;\r\n    }\r\n    // avoid overflow\r\n    const elapsed = Math.max(Math.min(timestamp - start, 500), 0);\r\n    try{\r\n      effect_func(elapsed);\r\n    }\r\n    catch(error){\r\n      // the object is not rendered yet\r\n      start = undefined;\r\n      return;\r\n    }\r\n    if (elapsed < 500){\r\n      window.requestAnimationFrame(makeEffect);\r\n    }\r\n    else {\r\n      // end situation\r\n      effect_func(500);\r\n      start = undefined;\r\n    }\r\n  }\r\n  window.requestAnimationFrame(makeEffect);\r\n}\r\n\r\nexport {FadeInEffect, FadeOutEffect, showContentEffect, hideContentEffect}","import React from 'react';\r\nimport {ButtonComponent} from './ButtonComponent';\r\nimport {showContentEffect, hideContentEffect} from './MyEffect';\r\nimport './DropComponent.css';\r\n\r\nfunction ContentDisplayController(){\r\n  const [hide, setHide] = React.useState(true);\r\n  const ref_content = React.useRef(null);\r\n  const toggleOptions = (event) => {\r\n    // possible to be nested, \r\n    // stop event bubbling to avoid close all content\r\n\r\n    event.preventDefault()\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    if (hide){\r\n      setHide(false);\r\n      showContentEffect(ref_content);\r\n      return;\r\n    }\r\n    hideContentEffect(ref_content);\r\n    setTimeout(()=>{ setHide(true);}, 501);\r\n  }\r\n  const handleContentClick = (event) => {\r\n    if (event.target.className.includes(\"save_and_close\") ||\r\n      event.target.parentNode.className.includes(\"save_and_close\")){\r\n        toggleOptions(event);\r\n    }\r\n  }\r\n  return [hide, toggleOptions, handleContentClick, ref_content];\r\n}\r\n\r\nfunction DropComponent(props){\r\n  // props: cls_name, title, content\r\n  // cls_name: string of additional classname\r\n  // title: string or jsx components\r\n  // content: react components\r\n  const [hide, toggleOptions, handleContentClick, ref_content] = ContentDisplayController();\r\n  return (\r\n    <div className={`drop_container ${props.cls_name || \"\"}`}>\r\n      <ButtonComponent\r\n        cls_name=\"drop_title\"\r\n        func={toggleOptions}\r\n        content={\r\n          <>\r\n            {props.title}\r\n            <i className={`bi bi-chevron-${hide ? \"down\" : \"up\"}`}/>\r\n          </>\r\n        }\r\n      />\r\n      <div className={`drop_content ${hide || \"z1 pa rd\"}`}\r\n        hidden={hide}\r\n        ref={ref_content}\r\n        onClick={handleContentClick}\r\n      >\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SideBarComponent(props){\r\n  // props: cls_name, title, content\r\n  // cls_name: string of additional classname\r\n  // title: string or jsx component\r\n  // content: jsx component\r\n  const [hide, toggleOptions, handleContentClick, ref_content] = ContentDisplayController();\r\n  return (\r\n    <div className={`drop_container pf z1 ${hide || \"fih fiw\"}  ${props.cls_name || \"\"}`}>\r\n      <ButtonComponent\r\n        cls_name=\"drop_title sidebar_title pa z1\"\r\n        func={toggleOptions}\r\n        content={props.title}\r\n      />\r\n      <div className={`${hide || \"fg1 sidebar fih fiw\"}`}\r\n        hidden={hide}\r\n        onClick={handleContentClick}\r\n        ref={ref_content}\r\n      >\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {DropComponent, SideBarComponent};","import React from 'react';\r\nimport {DropComponent} from './DropComponent';\r\nimport {ButtonComponent, IconTitleButtonComponent, ToggleButtonComponent} from './ButtonComponent';\r\nimport './MyFormComponent.css';\r\n\r\nfunction MyFormComponent(props){\r\n  // props: question_list:\r\n  // array of object {question, default_val, type, setFunc}\r\n  // question: string\r\n  // default_val: any type of data object\r\n  // type: string of form type\r\n  // setfunc: function to execute when click submit\r\n  const current_status = props.question_list.map(q => \r\n    SetHelper(q.default_val)\r\n  );\r\n  const handleSubmit = () => {\r\n    current_status.forEach((status, i)=> {\r\n      props.question_list[i].setFunc(status.current_val);\r\n    });\r\n  }\r\n  const handleCancel = () => {\r\n    current_status.forEach((status, i)=> {\r\n      status.setVal(props.question_list[i].default_val);\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"form gd g10 fg1\">\r\n      {props.question_list.map((q_item, i)=>\r\n        <QuestionItem\r\n          question_item={q_item}\r\n          current={current_status[i]}\r\n          key={`qustion_${i}`}\r\n        />\r\n      )}\r\n      <div className=\"fx g10\">\r\n        <IconTitleButtonComponent\r\n          cls_name={`primary save_and_close`}\r\n          icon_cls_name=\"check\"\r\n          content=\"save\"\r\n          func={handleSubmit}\r\n        />\r\n        <IconTitleButtonComponent\r\n          cls_name={`secondary save_and_close`}\r\n          icon_cls_name=\"x\"\r\n          content=\"cancel\"\r\n          func={handleCancel}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction InputQuestionComponent(props){\r\n  // props:  question, icon_cls_name, val, setVal\r\n  // question: string\r\n  // icon_cls_name: string of icon's classname to describe the question\r\n  // val: object to display the data\r\n  // setVal: function to update parent's state\r\n  const handleInput = (event) => {\r\n    props.setVal(event.target.value);\r\n  }\r\n  return (\r\n    <div className=\"gd g5 fg1\">\r\n      <label htmlFor={props.question}>\r\n        {props.question}\r\n      </label>\r\n      <div className=\"input_container gd\">\r\n        <i className={`${props.icon_cls_name} input_icon`}/>\r\n        <input\r\n          className=\"input circle_side fiw\"\r\n          name={props.question}\r\n          type=\"text\"\r\n          placeholder={props.question}\r\n          value={props.val}\r\n          onChange={handleInput}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction ToggleQuestionComponent(props){\r\n  // props:  question, val, setVal\r\n  // question: string\r\n  // val: object to display the data\r\n  // setVal: function to update parent's state\r\n  const handleClick = () => {\r\n    props.setVal(! props.val);\r\n  }\r\n  return (\r\n    <ToggleButtonComponent\r\n      is_toggled={props.val}\r\n      func={handleClick}\r\n      content={props.question}\r\n    />\r\n  );\r\n}\r\nfunction SelectQuestionComponent(props){\r\n  // props:  val, setVal, option_list\r\n  // val: object to display the data\r\n  // setVal: function to update parent's state\r\n  // option_list: processed arr of object\r\n  \r\n  const optionList = (\r\n    <div className=\"option_list gd g5 fg1\">\r\n      {props.option_list.map((option, i) =>\r\n        <ButtonComponent\r\n          cls_name={`option save_and_close ${option === props.val ? \"selected\": \"\"}`}\r\n          content={option}\r\n          func={()=>{props.setVal(option)}}\r\n          key={`option-${i}`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <DropComponent\r\n      title={props.val}\r\n      content={optionList}\r\n      save_close={true}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SetHelper(default_val){\r\n  const [val, setVal] = React.useState(default_val);\r\n  return {\"current_val\": val, \"setVal\": setVal};\r\n}\r\nfunction QuestionItem(props){\r\n  // props: question_item, current\r\n  // question_item: object {question, default_val, type, setFunc, ...}\r\n  // current: object that is reference to question_item's current_status\r\n  switch (props.question_item.type){\r\n    case \"input\":\r\n      return (\r\n      <InputQuestionComponent\r\n        question={props.question_item.question}\r\n        icon_cls_name={props.question_item.icon_cls_name}\r\n        val={props.current.current_val}\r\n        setVal={props.current.setVal}\r\n      />\r\n      );\r\n    case \"select\":\r\n      return (\r\n        <SelectQuestionComponent\r\n          question={props.question_item.question}\r\n          option_list={props.question_item.option_list}\r\n          val={props.current.current_val}\r\n          setVal={props.current.setVal}\r\n        />\r\n      );\r\n    case \"toggle\":\r\n      return (\r\n        <ToggleQuestionComponent\r\n          question={props.question_item.question}\r\n          val={props.current.current_val}\r\n          setVal={props.current.setVal}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n}\r\n\r\nexport {MyFormComponent, SelectQuestionComponent};","function EvenlyColumnList(props){\r\n  // props: cls_name, list\r\n  // cls_name: sdiving of classname\r\n  // list: array of sdiving or jsx object\r\n  return (\r\n    <GridListComponent\r\n      cls_name={props.cls_name}\r\n      num_cols={props.list.length}\r\n      list={props.list}\r\n    />\r\n  );\r\n}\r\nfunction GridListComponent(props){\r\n  // props: num_cols, cls_name, list\r\n  // num_cols: int indicate how many nums of cols\r\n  // cls_name: string of additional classname\r\n  // list: array of string or jsx objects of content\r\n  const style = {\r\n    \"gridTemplateColumns\": `repeat(${props.num_cols}, 1fr)`\r\n  };\r\n  return (\r\n    <div className={`list_container gd jst aii g5 w100 ${props.cls_name}`}\r\n      style={style}\r\n    >\r\n      {props.list.map((item, i)=> \r\n        <ColumnItem\r\n          content={item}\r\n          key={`item-${props.cls_name}-${i}`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction ColumnItem(props){\r\n  // props: content\r\n  // content: jsx object being wrapped\r\n  return (\r\n    <div className=\"list_col fx jst aii dv w100\">\r\n      {props.content}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LabelItem(props){\r\n  // props: title, content\r\n  // title, content: sdiving or jsx component\r\n  return (\r\n    <div className={`label_container fx jsi aii fg1 g10`}>\r\n      <div className=\"label_title fx jsi\">\r\n        {props.title}\r\n      </div>\r\n      <div className=\"label_content fx jsi\">\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport {EvenlyColumnList, LabelItem};","import React from 'react';\r\nimport {SideBarComponent, DropComponent} from '../app_components/DropComponent';\r\nimport {MyFormComponent, SelectQuestionComponent} from '../app_components/MyFormComponent';\r\nimport {IconTitleButtonComponent} from '../app_components/ButtonComponent';\r\nimport {LabelItem} from '../app_components/ListComponent';\r\nimport {default as WeatherAPI} from '../datastore/WeatherAPI.json';\r\n\r\n\r\nfunction SettingSection(props){\r\n  // props: setTown, setCity, setAPIKey, setCalendarID, setUseExample\r\n  // set functions inherit from app\r\n  // use_example_data: bool for disable other settings\r\n  return (\r\n    <SideBarComponent\r\n      cls_name=\"setting\"\r\n      title={<i className=\"bi bi-gear\"/>}\r\n      content={\r\n        <>\r\n          <ChooseLocationSection\r\n            setCity={props.setCity}\r\n            setTown={props.setTown}\r\n          />\r\n          <EditCalendarArgSection\r\n            setAPIKey={props.setAPIKey}\r\n            setCalendarID={props.setCalendarID}\r\n            setUseExample={props.setUseExample}\r\n            use_example_data={props.use_example_data}\r\n          />\r\n          <IconTitleButtonComponent\r\n            cls_name=\"refresh\"\r\n            icon_cls_name=\"bi bi-arrow-repeat\"\r\n            content=\"重新整理氣象與日曆資料\"\r\n            func={props.RefreshAll}\r\n          />\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction ChooseLocationSection(props){\r\n  // props: setCity, setTown\r\n  // setCity, setTown: functions that inherit from app\r\n  \r\n  // inner control state\r\n  const [city, setCity] = React.useState(\"選擇城市\");\r\n  const [town, setTown] = React.useState(\"選擇鄉鎮\");\r\n  \r\n  const handleSetCity = (name) => {\r\n    // remove town if reselect city\r\n    props.setTown(\"\");\r\n    props.setCity(name);\r\n    setTown(\"選擇鄉鎮\");\r\n    setCity(name);\r\n  }\r\n  const handleSetTown = (name) => {\r\n    props.setTown(name);\r\n    setTown(name);\r\n  }\r\n  // update only if city is changed\r\n  // instead to produce town list by city,\r\n  // and show the current location\r\n  // it must be decided without submit button\r\n  const CityList = React.useMemo(() => (\r\n    <SelectQuestionComponent\r\n      val={city}\r\n      option_list={WeatherAPI.cities}\r\n      setVal={handleSetCity}\r\n    />\r\n  // eslint-disable-next-line\r\n  ), [city]);\r\n  \r\n  // update if location is changed\r\n  const TownList = React.useMemo(() => (\r\n    <SelectQuestionComponent\r\n      val={town}\r\n      option_list={\r\n        city === \"選擇城市\" ? [] :\r\n        WeatherAPI.city_data[city].town_list\r\n      }\r\n      setVal={handleSetTown}\r\n    />\r\n  // eslint-disable-next-line\r\n  ), [city, town]);\r\n  const content = (\r\n    <>\r\n      {CityList}\r\n      {TownList}\r\n    </>\r\n  );\r\n  const title = (\r\n    <LabelItem\r\n      title={<i className=\"bi bi-geo-alt\"/>}\r\n      content=\"設定天氣地點\"\r\n    />\r\n  );\r\n  return (\r\n    <DropComponent\r\n      cls_name=\"location_setting\"\r\n      title={title}\r\n      content={content}\r\n    />\r\n  );\r\n}\r\n\r\nfunction EditCalendarArgSection(props){\r\n   // props: setStart, setAPIKey, setCalendarID, setUseExample\r\n   const content = (\r\n     <MyFormComponent\r\n      question_list={[\r\n        {\r\n          question: \"Google API key\",\r\n          type: \"input\",\r\n          default_val: \"\",\r\n          icon_cls_name: \"bi bi-key-fill\",\r\n          setFunc: props.setAPIKey\r\n        },\r\n        {\r\n          question: \"Google 日曆ID\",\r\n          type: \"input\",\r\n          default_val: \"\",\r\n          icon_cls_name: \"bi bi-calendar-plus\",\r\n          setFunc: props.setCalendarID\r\n        },\r\n        {\r\n          question: \"使用展示資料(不使用API key)\",\r\n          type: \"toggle\",\r\n          default_val: true,\r\n          setFunc: props.setUseExample\r\n        }\r\n      ]}\r\n     />\r\n   );\r\n   const title = (\r\n    <LabelItem\r\n      title={<i className=\"bi bi-calendar4\"/>}\r\n      content=\"設定Google日曆連線\"\r\n    />\r\n  );\r\n   return (\r\n    <DropComponent\r\n      cls_name=\"calendar_setting\"\r\n      title={title}\r\n      content={content}\r\n    />\r\n   );\r\n}\r\n\r\nexport default SettingSection;","import React from 'react';\r\nimport {FadeInEffect, FadeOutEffect} from './MyEffect';\r\nimport {CircleButtonComponent} from './ButtonComponent';\r\nimport './CardComponent.css';\r\n\r\nfunction CardComponent(props){\r\n  // props: cls_name, name, is_horizon, has_shadow,, content\r\n  // cls_name, name: string of class/ id\r\n  // is_horizon: bool indicates the direction of arrangement\r\n  // has_shadow: bool indicates appearance\r\n  // gap_size: int for gap size\r\n  // content: jsx being wrapped\r\n  let appearance = \"\";\r\n  if (props.has_shadow){\r\n    appearance += \"shadow\";\r\n  }\r\n  appearance += ` g${props.gap_size || 10}`;\r\n  const d = props.is_horizon ? \"dh\": \"dv\";\r\n  return (\r\n    <div id={props.name}\r\n      className={`card fx ${d} aii jst fg1 rd_big ${appearance} ${props.cls_name || \"\"}`}\r\n    >\r\n      {props.content}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SlideCardsComponent(props){\r\n  // props: content\r\n  // content: array of object for card, see FigCardComponent\r\n  const [page, SetPage] = React.useState(0);\r\n  const ref_card = React.useRef(null);\r\n  const nextPage = () => {\r\n    if (page === props.content.length - 1){\r\n      return;\r\n    }\r\n    FadeOutEffect(ref_card);\r\n    setTimeout(()=> {\r\n      SetPage(page + 1);\r\n    }, 500);\r\n    setTimeout(()=> {\r\n      FadeInEffect(ref_card);\r\n    }, 510);\r\n  }\r\n  const prePage = () => {\r\n    if (page === 0){\r\n      return;\r\n    }\r\n    FadeOutEffect(ref_card);\r\n    setTimeout(()=> {\r\n      SetPage(page - 1);\r\n    }, 500);\r\n    setTimeout(()=> {\r\n      FadeInEffect(ref_card);\r\n    }, 510);\r\n  }\r\n  // this is for some re-rendering situation \r\n  // ex in page 2 and suddenly refetch data\r\n  // if not doing this, something would failed ...\r\n  // even though the failed situation seems will not show on screen\r\n  let card_title; let content; let fig_cap; let fig; let name;\r\n  if (! props.content || ! props.content[page]){\r\n    SetPage(0);\r\n    card_title = \"--\";\r\n    content = \"--\";\r\n    fig_cap = \"--\";\r\n    fig = \"--\";\r\n    name = \"--\";\r\n  }\r\n  else {\r\n    card_title = props.content[page].card_title;\r\n    content = props.content[page].content;\r\n    fig_cap = props.content[page].fig_cap;\r\n    fig = props.content[page].fig;\r\n    name = props.content[page].name;\r\n  }\r\n  return (\r\n    <div className=\"sliding_card gd jsc fg1\">\r\n      <div className=\"sliding_card_content fx aii jst\"\r\n        ref={ref_card}\r\n      >\r\n        <FigCardComponent\r\n          name={name}\r\n          cls_name=\"\"\r\n          card_title={card_title}\r\n          content={content}\r\n          fig={fig}\r\n          fig_cap={fig_cap}\r\n        />\r\n      </div>\r\n      <CircleButtonComponent\r\n        cls_name=\"prev_page\"\r\n        icon_cls_name=\"chevron-left\"\r\n        is_disable={page === 0}\r\n        func={prePage}\r\n      />\r\n      <CircleButtonComponent\r\n        cls_name=\"next_page\"\r\n        icon_cls_name=\"chevron-right\"\r\n        is_disable={page === props.content.length - 1}\r\n        func={nextPage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FigCardComponent(props){\r\n  // props: cls_name, name, card_title, content, fig, fig_cap\r\n  // cls_name, name: string of class/ id\r\n  // card_title: string, primary title of card\r\n  // content: string or jsx object \r\n  // fig: jsx component of primary visual\r\n  // fig_cap: string to describe the fig\r\n\r\n  const content = (\r\n    <div className={`fig_card gd fg1 aii g5`}>\r\n      <header className=\"card_title_container fx jsi\">\r\n        {props.card_title}\r\n      </header>\r\n      <main className=\"card_content_container fx dv aii jse g5 fg1\">\r\n        <div className=\"fig fx jsc aii\">\r\n          {props.fig}\r\n        </div>\r\n        <div className=\"fig_cap_container fx dv jsc g5\">\r\n          {props.fig_cap}\r\n        </div>\r\n      </main>\r\n      <footer className=\"footer fx dv jsc g5\">\r\n        {props.content}\r\n      </footer>\r\n    </div>\r\n  );\r\n  return (\r\n    <CardComponent\r\n      name={props.name}\r\n      cls_name={props.cls_name}\r\n      has_shadow={true}\r\n      content={content}\r\n    />\r\n  );\r\n}\r\n\r\nfunction HorizonCardComponent(props){\r\n  // props: cls_name,title, content\r\n  // cls_name: string of class\r\n  // title, content: string or jsx object \r\n  const content = (\r\n    <div className={`horizon_card gd acc jse fg1 g10`}>\r\n      <div className=\"card_title_container fx jsc fg1\">\r\n        {props.title}\r\n      </div>\r\n      <div className=\"card_content_container fx dv aii jse g5 fg1\">\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <CardComponent\r\n      cls_name={props.cls_name}\r\n      has_shadow={true}\r\n      content={content}\r\n    />\r\n  );\r\n}\r\n\r\nfunction TextCardComponent(props){\r\n  // props: cls_name, main, footer, func\r\n  // cls_name: string of class\r\n  // main, footer: string or object\r\n  // func: action when clicking the main area\r\n  return (\r\n    <div className={`text_card fx dh aii fg1 ${props.cls_name || \"\"}`}\r\n      onClick={props.func}\r\n    >\r\n      <div className=\"text_card_body fx dv aii fg1 p10\">\r\n        <main className=\"main fx jsi fg2 bf\">\r\n          {props.main}\r\n        </main>\r\n        <footer className=\"footer fx dv aii g5\">\r\n          {props.footer}\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {CardComponent, SlideCardsComponent, HorizonCardComponent, TextCardComponent};","import {EvenlyColumnList} from './ListComponent';\r\nimport './ChartComponent.css';\r\n\r\nfunction ChartComponent(props){\r\n  // props: x_cords, data_list\r\n  // x_cords: array of cords (string) on x-axis\r\n  // data_list: array of object {title, vals}\r\n  // title: string of data's name\r\n  // vals: array of {y, label}\r\n  // y: int represents percentage of y position\r\n  // label: string\r\n\r\n  // create x positions\r\n  const x_unit = 100 / props.x_cords.length;\r\n  const x_pos = [x_unit * 0.5];\r\n  for (let i = 1; i < props.x_cords.length; i++){\r\n    x_pos.push(x_pos[i - 1] + x_unit);\r\n  }\r\n  return (\r\n  <div className=\"chart gd aii jst fg1 rd_small\">\r\n    <EvenlyColumnList\r\n      cls_name=\"xaxis\"\r\n      list={props.x_cords.map((x_cord, i)=>\r\n        <XCordContainer\r\n          x_cord={x_cord}\r\n          x_cord_idx={i}\r\n          data_list={props.data_list}\r\n          key={`x_cord-${i}`}\r\n        />\r\n      )}\r\n    />\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"chart_body fx fg1 fiw\"\r\n    >\r\n      {props.data_list.map((data, i)=>\r\n        <LineGroup\r\n          x_pos={x_pos}\r\n          y_pos={data.vals.map(cord => getY(cord.y))}\r\n          key={`linegroup-${i}`}\r\n        />\r\n      )}\r\n    </svg>\r\n  </div>\r\n  );\r\n}\r\n\r\nfunction XCordContainer(props){\r\n  // props: x_cord, x_cord_idx, data_list\r\n  // x_cord: string, cord at current x-axis position\r\n  // x_cord_idx: int represents index of current x_cord\r\n  // data_list: see above, inherit from parent\r\n  return (\r\n    <div className=\"xcord gd aii fiw fih \">\r\n      {props.x_cord}\r\n      {props.data_list.map((data, j)=>\r\n        <div className=\"label \"\r\n          style={{top: getLabelY(data.vals[props.x_cord_idx].y)}}\r\n          key={`label-${props.x_cord_idx}-${j}`}\r\n        >\r\n          {`${data.vals[props.x_cord_idx].label}`}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction LineGroup(props){\r\n  // props: x_pos, y_pos\r\n  // array of int presents relative position in x/y axis\r\n  // x_pos.length === y_pos.length\r\n  const start_x = [props.x_pos[0], ...props.x_pos];\r\n  const start_y = [props.y_pos[0], ...props.y_pos];\r\n  return (\r\n    <g className=\"line_group\">\r\n      {props.x_pos.map((x, i)=>\r\n        <LineAndMarker\r\n          x1={start_x[i]}\r\n          y1={start_y[i]}\r\n          x2={x}\r\n          y2={props.y_pos[i]}\r\n          key={`line-${i}`}\r\n        />\r\n      )}\r\n      <animateTransform \r\n        attributeName=\"transform\"\r\n        attributeType=\"XML\"\r\n        type=\"scale\"\r\n        from=\"1 0\"\r\n        to=\"1 1\"\r\n        begin=\"1s\"\r\n        dur=\"3s\"\r\n        repeatCount=\"0\"/>\r\n    </g>\r\n  );\r\n}\r\nfunction LineAndMarker(props){\r\n  return (\r\n    <>\r\n      <line className=\"line_marker\"\r\n        x1={`${props.x1}%`} y1={`${props.y1}%`} \r\n        x2={`${props.x2}%`}  y2={`${props.y2}%`} \r\n      />\r\n      <circle className=\"line_marker\"\r\n        r=\"3\" cx={`${props.x2}%`} cy={`${props.y2}%`} \r\n      />\r\n    </>\r\n  );\r\n}\r\nfunction getY(y){\r\n  // y: int\r\n  // in order to leave some space for y axis\r\n  return y * 0.9 + 5;\r\n}\r\nfunction getLabelY(y){\r\n  // y: int\r\n  // in order to not to overlap the lines\r\n  return `${y * 0.8}%`;\r\n}\r\n\r\n\r\nexport {ChartComponent};","import {default as WeatherIcon} from '../datastore/WeatherIcon.json';\r\n\r\nfunction GetWeatherIcon(weather, is_night){\r\n  // weather: string of relevant weather description\r\n  // is_night: bool, for some cases there are day and night version\r\n  if (WeatherIcon.data[weather] === undefined){\r\n    console.log(weather);\r\n    return <div>{weather}</div>;\r\n  }\r\n  const weather_code = WeatherIcon.data[weather].code;\r\n  let icon_cls_name = WeatherIcon.ref_icons[weather_code];\r\n  if (weather_code && weather_code < 4){\r\n    icon_cls_name = icon_cls_name[is_night ? 1 : 0];\r\n  }\r\n  return <i className={`${icon_cls_name} bicon`}/>;\r\n}\r\n\r\nfunction GetSomethingFailedIcon(){\r\n  return <i className=\"bi bi-emoji-dizzy bicon\"/>;\r\n}\r\n\r\nfunction GetLetsStartIcon(){\r\n  // yeah, i like to uses this icon to represent it's a fresh start\r\n  return <i className=\"bi bi-stars bicon\"/>;\r\n}\r\n\r\nexport {GetWeatherIcon, GetSomethingFailedIcon, GetLetsStartIcon};","import './SpaceHolderComponent.css';\r\n\r\nfunction LoadingText(props){\r\n  //props: lines: int of lines\r\n  const lines = props.lines || 1;\r\n  return (\r\n    <div className=\"fiw fg1 ma\">\r\n      {Array.from(Array(lines).keys()).map(idx =>\r\n        <p className=\"loading fiw circle_side\" key={`loading_text_${idx}`}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction LoadingCircle(){\r\n  return (\r\n    <div className=\"circle rotating ma\"/>\r\n  );\r\n}\r\nfunction LoadingArea(){\r\n  return (\r\n    <div className=\"loading fx dv jsc fg1 fiw fih ma rd_small\">\r\n      loading ...\r\n    </div>\r\n  );\r\n}\r\nfunction SpaceHolderText(props){\r\n  // props: lines: int of lines\r\n  const lines = props.lines || 1;\r\n  return (\r\n    <div className=\"fiw fg1 ma\">\r\n      {Array.from(Array(lines).keys()).map(idx =>\r\n        <p className=\"empty fiw circle_side\" key={`empty_text_${idx}`}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nfunction SpaceHolderArea(props){\r\n  // props: msg\r\n  // msg: optional, string or jsx object\r\n  return (\r\n    <div className=\"empty fx dv jsc fg1 fiw fih ma rd_small\">\r\n      {props.msg}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {LoadingText, LoadingCircle, LoadingArea, SpaceHolderArea, SpaceHolderText};","function getModelByState(loading, is_success, data, executes){\r\n  // loading: bool, indicating whether fetching data is success\r\n  // is_success: bool, indicating whether parsing data is success\r\n  // data: data object/array to use when aboves are both success\r\n  // executes: {default, success, failed, loading}\r\n  // default, failed, loading: function to execute to get data model\r\n  let res;\r\n  if (loading){\r\n      if (is_success === undefined){\r\n        /* use loading */\r\n        res = executes.loading();\r\n      }\r\n      else if (is_success){\r\n        /* use success */\r\n        res = executes.success(data);\r\n      }\r\n      else {\r\n        /* use something failed */\r\n        res = executes.failed(`資料錯誤:${data ? data.error_msg: \"\"}`);\r\n      }\r\n    }\r\n    else if (loading === undefined){\r\n      /* use something failed */\r\n      res = executes.failed(`連線失敗:${data ? data.error_msg: \"\"}`);\r\n    }\r\n    else {\r\n      /* use default */\r\n      res = executes.default();\r\n    }\r\n  return res;\r\n}\r\n\r\nexport default getModelByState;","import {CardComponent} from '../app_components/CardComponent';\r\nimport {ChartComponent} from '../app_components/ChartComponent';\r\nimport {GetSomethingFailedIcon} from '../app_components/IconComponent';\r\nimport {LoadingArea, SpaceHolderArea} from '../app_components/SpaceHolderComponent';\r\nimport getModelByState from '../data_process_functions/getModelByState';\r\n\r\nfunction WeatherSectionWeek(props){\r\n  // props: data, loading, is_success\r\n  // data: parsed object\r\n  // loading: bool, see fetching state\r\n  // is_success: bool indicates whether parsing data is success\r\n  const data_model = getModelByState(\r\n    props.loading,\r\n    props.is_success,\r\n    props.data ? props.data.temp: null, \r\n    {\r\n      default: DefaultForecastWeek,\r\n      success: ForecastWeek,\r\n      failed: FaildForecastWeek,\r\n      loading: LoadingForecastWeek\r\n  });\r\n\r\n  return (\r\n    <section id=\"weather_week\" className=\"section\">\r\n      <CardComponent\r\n        cls_name=\"forecast_week\"\r\n        content={\r\n          <>\r\n            <header>\r\n              本周溫度趨勢\r\n            </header>\r\n            {data_model}\r\n          </>\r\n        }\r\n        has_shadow={true}\r\n      /> \r\n    </section>\r\n  );\r\n}\r\n\r\nfunction ForecastWeek(data){\r\n  // data: object, see parse api\r\n  // display_day, t_min, t_max, t_range\r\n  const [minT, maxT] = data.t_range;\r\n  const getTPos = (t) => {\r\n    return {\r\n      y: 100 - Math.floor(100 * (t - minT) / (maxT - minT)),\r\n      label: `${t}°C`\r\n    }\r\n  }\r\n  return (\r\n    <ChartComponent\r\n      x_cords={data.display_day}\r\n      data_list={[\r\n        {title: \"最高溫\", vals: data.t_max.map(t => getTPos(t))},\r\n        {title: \"最低溫\", vals: data.t_min.map(t => getTPos(t))}\r\n      ]}\r\n    />\r\n  );\r\n}\r\nfunction FaildForecastWeek(error_msg){\r\n  // msg: string of current situation\r\n  const msg = (\r\n    <>\r\n      {GetSomethingFailedIcon()}\r\n      {error_msg}\r\n    </>\r\n  );\r\n  return (\r\n    <SpaceHolderArea msg={msg}/>\r\n  );\r\n}\r\nfunction DefaultForecastWeek(){\r\n  return (\r\n    <SpaceHolderArea msg=\"請先設定所在城市\"/>\r\n  );\r\n}\r\nfunction LoadingForecastWeek(){\r\n  return (\r\n    <LoadingArea/>\r\n  );\r\n}\r\n\r\nexport default WeatherSectionWeek;","import {SlideCardsComponent} from '../app_components/CardComponent';\r\nimport {GetWeatherIcon, GetSomethingFailedIcon, GetLetsStartIcon} from '../app_components/IconComponent';\r\nimport {LabelItem} from '../app_components/ListComponent';\r\nimport {LoadingText, LoadingCircle, SpaceHolderText} from '../app_components/SpaceHolderComponent';\r\nimport getModelByState from '../data_process_functions/getModelByState';\r\n\r\nfunction WeatherSection3Day(props){\r\n  // props: data, loading, is_success\r\n  // data: parsed object\r\n  // loading: bool, see fetching state\r\n  // is_success: bool indicates whether parsing data is success\r\n\r\n  const data_model = getModelByState(\r\n    props.loading,\r\n    props.is_success,\r\n    props.data, \r\n    {\r\n      default: DefaultForecast3Day,\r\n      success: Forecast3Day,\r\n      failed: FaildForecast3Day,\r\n      loading: LoadingForecast3Day}\r\n  );\r\n  return (\r\n    <section id=\"weather_3day\" className=\"section\">\r\n      <SlideCardsComponent\r\n        content={data_model.map(d => ({\r\n          name: \"weather_3day_figcard\",\r\n          card_title: d.card_title,\r\n          content: d.content,\r\n          fig: d.fig,\r\n          fig_cap: d.fig_cap,\r\n        }))}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction Forecast3Day(data){\r\n  // data: array of {time, weather, feel, temp ... }\r\n  // see parse api\r\n  function GetContent(d){\r\n    return (\r\n      <>\r\n        <LabelItem\r\n          title={<i className=\"wi wi-humidity\"/>}\r\n          content={`濕度: ${d.humidity} %`}\r\n        />\r\n        <LabelItem\r\n          title={<i className=\"bi bi-umbrella-fill\"/>}\r\n          content={`降雨: ${d.rain_pro} %`}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  function GetFigCap(d){\r\n    return (\r\n      <>\r\n        {d.weather}\r\n        <LabelItem\r\n          title={<span className=\"bf\">{d.temp}</span>}\r\n          content={`°C ${d.feel}`}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    data.map(d => ({\r\n      card_title: d.time,\r\n      content: GetContent(d),\r\n      fig: GetWeatherIcon(d.weather, d.is_night),\r\n      fig_cap: GetFigCap(d),\r\n    }))\r\n  );\r\n}\r\nfunction FaildForecast3Day(error_msg){\r\n  // error_msg: string of current situation\r\n  return ([{\r\n    card_title: \"--\",\r\n    content: <SpaceHolderText lines={2}/>,\r\n    fig: GetSomethingFailedIcon(),\r\n    fig_cap: error_msg\r\n  }]);\r\n}\r\nfunction DefaultForecast3Day(){\r\n  return ([{\r\n    card_title: \"--\",\r\n    content: <SpaceHolderText lines={2}/>,\r\n    fig: GetLetsStartIcon(),\r\n    fig_cap: \"請先選擇所在城市\"\r\n  }]);\r\n}\r\nfunction LoadingForecast3Day(){\r\n  return ([{\r\n    card_title: <LoadingText/>,\r\n    content: <LoadingText lines={2}/>,\r\n    fig: <LoadingCircle/>,\r\n    fig_cap: \"Loading ...\"\r\n  }]);\r\n}\r\n\r\nexport default WeatherSection3Day;","import getModelByState from '../data_process_functions/getModelByState';\r\nimport { week_time_list } from '../data_process_functions/handleDatefunctions';\r\nimport {GetWeatherIcon, GetLetsStartIcon, GetSomethingFailedIcon} from '../app_components/IconComponent';\r\nimport {CardComponent, TextCardComponent, HorizonCardComponent} from '../app_components/CardComponent'\r\nimport {LabelItem} from '../app_components/ListComponent';\r\nimport {LoadingCircle, SpaceHolderArea} from '../app_components/SpaceHolderComponent';\r\n\r\nfunction ScheduleSection(props){\r\n  // props: schedule, weather\r\n  // schedule, weather: object containing\r\n  // {loading, is_success, data}\r\n  // loading: bool indicate whether fetching is success\r\n  // is_success: bool indicate whether data parsing is success\r\n  // data: object if aboves are both success \r\n  const weather_list = getModelByState(\r\n    props.weather.loading,\r\n    props.weather.is_success,\r\n    props.weather.data[\"week\"] ?props.weather.data[\"week\"] : null,\r\n    {\r\n      success: WeatherList,\r\n      default: DefaultWeatherList,\r\n      loading: LoadingWeatherList,\r\n      failed: FailedWeatherList\r\n    }\r\n  );\r\n  const schedule_list = getModelByState(\r\n    props.schedule.loading,\r\n    props.schedule.is_success,\r\n    props.schedule.data,\r\n    {\r\n      success: ScheduleList,\r\n      default: DefaultScheduleList,\r\n      loading: LoadingScheduleList,\r\n      failed: FailedScheduleList\r\n    }\r\n  ); \r\n\r\n  return (\r\n    <section id=\"schedule_section\"\r\n      className=\"section\"\r\n    >\r\n      <CardComponent\r\n        name=\"schedule_list\"\r\n        gap_size={50}\r\n        content={week_time_list.map((wt, i)=>\r\n          <DayItemComponent\r\n            time={wt.display_time}\r\n            weather={weather_list[i]}\r\n            schedule={\r\n              schedule_list.event_by_day[i] || \r\n              <NoEventItemComponent date={wt.date_obj}/>\r\n            }\r\n            key={`weekday_${i}`}\r\n          />\r\n        )}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction WeatherList(weather_week){\r\n  // weather_week: object, see parseAPI \r\n\r\n  // data: object {weekidx : {day : detail, night: detail}}\r\n  // detail: {weather, weather_point, rain_pro}\r\n  const data = weather_week.weather_by_idx;\r\n  const weather_by_day = [];\r\n  for (let i = 0; i < 7; i++){\r\n    const res = {\r\n      day: {weather: \"-\", rain_pro: \"-\"},\r\n      night: {weather: \"-\", rain_pro: \"-\"},\r\n    }\r\n    if (data[i]){\r\n      const w = data[i];\r\n      [\"day\", \"night\"].forEach(day_span => {\r\n        if (w[day_span]){\r\n          res[day_span].weather = w[day_span].weather;\r\n          res[day_span].rain_pro = w[day_span].rain_pro;\r\n        }\r\n      });\r\n    }\r\n    weather_by_day.push(res);\r\n  }\r\n  return (\r\n    weather_by_day.map((w, i) =>\r\n      <DayWeatherComoponent\r\n          weather_obj={w}\r\n          key={`weather_by_day-${i}`}\r\n      />\r\n    )\r\n  );\r\n}\r\nfunction FailedWeatherList(error_msg){\r\n  // error msg: string indicate error\r\n  const weather_by_day = [];\r\n  const failed_component = \r\n    <SpaceHolderArea \r\n      msg={`氣象資料載入失敗: ${error_msg}`}\r\n    />\r\n  ;\r\n  for (let i = 0; i < 7; i++){\r\n    weather_by_day.push(\r\n      failed_component\r\n    );\r\n  }\r\n  return weather_by_day;\r\n} \r\nfunction DefaultWeatherList(){\r\n  const weather_by_day = [];\r\n  const spaceholder = <SpaceHolderArea msg={`請先設定天氣地點`} />;\r\n  for (let i = 0; i < 7; i++){\r\n    weather_by_day.push(\r\n      spaceholder\r\n    );\r\n  }\r\n  return weather_by_day;\r\n}\r\nfunction LoadingWeatherList(){\r\n  const weather_by_day = [];\r\n  const spaceholder = <LoadingCircle/>;\r\n  for (let i = 0; i < 7; i++){\r\n    weather_by_day.push(\r\n      spaceholder\r\n    );\r\n  }\r\n  return weather_by_day;\r\n}\r\n\r\nfunction ScheduleList(data){\r\n  // data, object of schedule\r\n  const event_by_day = {};\r\n  \r\n  data.list.forEach(event_item => {\r\n    event_item.time_spans.forEach(t => {\r\n      let end = t.end_idx;\r\n      if (t.display_time.substring(t.display_time.length - 5) !== \"00:00\"){\r\n        end ++;\r\n      }\r\n      for (let start = t.start_idx; start < end; start ++){\r\n        if (! event_by_day[start]){\r\n          event_by_day[start] = {};\r\n        }\r\n        // to let same day events are sorted by display_time\r\n        event_by_day[start][t.display_time] = {\r\n          event_item: event_item,\r\n          display_time: t.display_time\r\n        };\r\n      }\r\n    });\r\n  });\r\n  for (let daykey in event_by_day){\r\n    event_by_day[daykey] = (\r\n      <div className=\"fx dv aii fg1 g50\">\r\n        {Object.keys(event_by_day[daykey]).sort().map((display_time, i)=>\r\n          <EventItemComponent\r\n            event_item={event_by_day[daykey][display_time].event_item}\r\n            display_time={display_time}\r\n            key={`event-${i}`}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  return {\r\n    schedule_name: data.name,\r\n    event_by_day\r\n  };\r\n}\r\nfunction FailedScheduleList(error_msg){\r\n  // error_msg, string indicate error\r\n  const event_by_day = {};\r\n  const item = (\r\n    <TextCardComponent\r\n      cls_name=\"event_item\"\r\n      func={null}\r\n      footer={null}\r\n      main={\r\n        <LabelItem \r\n          title={GetSomethingFailedIcon()}\r\n          content={error_msg}\r\n        />\r\n      }\r\n    />\r\n  );\r\n  for (let i = 0; i < 7; i++){\r\n    event_by_day[i] = item;\r\n  }\r\n  return {\r\n    schedule_name: error_msg,\r\n    event_by_day\r\n  };\r\n}\r\nfunction DefaultScheduleList(){\r\n  const event_by_day = {};\r\n  const item = (\r\n    <TextCardComponent\r\n      cls_name=\"event_item\"\r\n      func={null}\r\n      footer={null}\r\n      main={\r\n        <LabelItem \r\n          title={GetLetsStartIcon()}\r\n          content=\"no data so far\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n  for (let i = 0; i < 7; i++){\r\n    event_by_day[i] = item;\r\n  }\r\n  return {\r\n    schedule_name: \"no data so far\",\r\n    event_by_day\r\n  };\r\n}\r\nfunction LoadingScheduleList(){\r\n  const event_by_day = {};\r\n  const item = (\r\n    <TextCardComponent\r\n      cls_name=\"event_item\"\r\n      func={null}\r\n      footer={null}\r\n      main={<LoadingCircle/>}\r\n    />\r\n  );\r\n  for (let i = 0; i < 7; i++){\r\n    event_by_day[i] = item;\r\n  }\r\n  return {\r\n    schedule_name: \"no data so far\",\r\n    event_by_day\r\n  };\r\n}\r\n\r\nfunction DayItemComponent(props){\r\n  // props: time, weather, schedule\r\n  // time: string\r\n  // weather, schedule: jsx object\r\n  const title = (\r\n    <div className=\"fx dv\">\r\n      <h1 className=\"bf tc\">\r\n        {props.time}\r\n      </h1>\r\n      {props.weather}\r\n    </div>\r\n  );\r\n  return (\r\n    <HorizonCardComponent\r\n      cls_name=\"schedule_day_item\"\r\n      title={title}\r\n      content={props.schedule}\r\n    />\r\n  );\r\n}\r\nfunction DayWeatherComoponent(props){\r\n  // props: weather_obj: object of weather\r\n  // key: {day, night}\r\n  // day, night: object {weather, rain_prop}\r\n  return (\r\n  <div className=\"gd fg1 g10\">\r\n    {[\"day\", \"night\"].map((day_span, i)=>\r\n      <div className=\"fx dv jsc fg1 secondary\"\r\n        key={`dayspan${i}`}\r\n      >\r\n        {GetWeatherIcon(props.weather_obj[day_span].weather, i === 1)}\r\n        {`${props.weather_obj[day_span].rain_pro} %`}\r\n      </div>\r\n    )}\r\n  </div>\r\n  );\r\n}\r\nfunction EventItemComponent(props){\r\n  // props: event_item, display_time\r\n  // event_item: event object \r\n  // display_time: string represent event time span\r\n  const event_name = props.event_item.event_name;\r\n  const event_time = props.display_time;\r\n  const event_location = props.event_item.location;\r\n  const func = ()=> {window.open(props.event_item.link, \"_blank\");};\r\n\r\n  return(\r\n    <TextCardComponent\r\n      cls_name=\"event_item\"\r\n      func={func}\r\n      main={event_name}\r\n      footer={\r\n        <>\r\n        <LabelItem\r\n          title={<i className=\"bi bi-clock\"/>}\r\n          content={event_time}\r\n        />\r\n        <LabelItem\r\n          title={<i className=\"bi bi-geo-alt\"/>}\r\n          content={event_location || \"尚未設定\"}\r\n        />\r\n        </>\r\n      }\r\n    />\r\n  ); \r\n}\r\nfunction NoEventItemComponent(props){\r\n  // date: date object, in order to get the link to calendar\r\n  const url = getCalendarLinkByDate(props.date);\r\n  return (\r\n    <TextCardComponent\r\n      cls_name=\"event_item\"\r\n      func={()=> {window.open(url, \"_blank\");}}\r\n      main={\r\n        <LabelItem \r\n          title={GetLetsStartIcon()}\r\n          content=\"尚無行程，點此設定 :D\"\r\n        />\r\n      }\r\n      footer={null}\r\n    />\r\n  );\r\n}\r\nfunction getCalendarLinkByDate(t){\r\n  // t: date object\r\n  const [year, month, date] = [t.getFullYear(), t.getMonth() + 1, t.getDate()];\r\n  return `https://calendar.google.com/calendar/u/0/r/day/${year}/${month}/${date}`;\r\n}\r\nexport default ScheduleSection;","import React from 'react';\nimport {FetchCalendarState, FetchingWeatherState} from './data_process_functions/FetchingState';\n\nimport SettingSection from './app_sections/SettingSection';\nimport WeatherSectionWeek from './app_sections/WeatherSectionWeek';\nimport WeatherSection3Day from './app_sections/WeatherSection3Day';\nimport ScheduleSection from './app_sections/ScheduleSection';\n\nimport './App.css';\nimport './datastore/WeatherIcon/css/weather-icons.min.css';\n\nfunction App(){\n\n  // fetching schedule\n  const [start, setStart] = React.useState(Date.now());\n  const [api_key, setAPIKey] = React.useState(\"\");\n  const [calendar_id, setCalendarID] = React.useState(\"\");\n  const [use_example_data, setUseExample] = React.useState(true);\n\n  const [schedule_data, schedule_loading] = FetchCalendarState(api_key, calendar_id, start, use_example_data);\n\n  // fetching weather\n  const [city, setCity] = React.useState(\"\");\n  const [town, setTown] = React.useState(\"\");\n  const [weather_data, weather_loading] = FetchingWeatherState(city, town, start);\n\n  const [Forecast3Day, ForecastWeek] = React.useMemo(()=> [\n    <WeatherSection3Day\n      loading={weather_loading}\n      data={weather_data[\"3day\"]}\n      is_success={weather_data.is_success}\n    />,\n    <WeatherSectionWeek\n      loading={weather_loading}\n      data={weather_data[\"week\"]}\n      is_success={weather_data.is_success}\n    />\n  ], [weather_data, weather_loading]);\n\n  const Schedule = React.useMemo(()=>\n    <ScheduleSection\n      schedule={{\n        loading: schedule_loading,\n        is_success: schedule_data.is_success,\n        data: schedule_data\n      }}\n      weather={{\n        loading: weather_loading,\n        is_success: weather_data.is_success,\n        data: weather_data\n      }}\n    />\n  , [weather_data, weather_loading, schedule_data, schedule_loading]);\n\n  const RefreshAll = () => {\n    setStart(Date.now());\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <SettingSection\n          setCity={setCity}\n          setTown={setTown}\n          setAPIKey={setAPIKey}\n          setCalendarID={setCalendarID}\n          setUseExample={setUseExample}\n          RefreshAll={RefreshAll}\n        />\n      </header>\n      <main id=\"app-main\">\n        <section id=\"app-weather\" className=\"section\">\n          {Forecast3Day}\n          {ForecastWeek}\n        </section>\n        {Schedule}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport {fetchWeather_3day, fetchWeather_week, fetchCalendar} from '../API_process_functions/fetchingAPI';\r\nimport {parseWeather, parseCalendar} from '../API_process_functions/parseAPI';\r\nimport {WeatherFetchErrorMsg, CalendarFetchErrorMsg} from '../API_process_functions/handleFetchError';\r\n\r\n/* ----------------------------------------------------------- \r\n* async get data, and return current fetching is loading or not\r\n* if it's loading, we can use the data\r\n-------------------------------------------------------------*/\r\n\r\nfunction FetchingWeatherState(city, town, startTime){\r\n  // city, town: string of location name\r\n  const [data, setData] = React.useState({});\r\n  const [loading, setLoading] = React.useState(false);\r\n  React.useEffect(() => {\r\n    async function fetchingWeatherData() {\r\n      try {\r\n        setLoading(true);\r\n        setData({is_success: undefined});\r\n        //fetchWeather_3day, fetchWeather_week\r\n        const fetchResult_3day = await fetchWeather_3day(city, town);\r\n        const fetchResult_week = await fetchWeather_week(city, town);\r\n        const parsedData = parseWeather(fetchResult_3day, fetchResult_week);\r\n        setData(parsedData);\r\n      } \r\n      catch (error) {\r\n        setLoading(undefined);\r\n        setData(WeatherFetchErrorMsg(error));\r\n      }\r\n    }\r\n    if (city !== \"\" && town !== \"\") {\r\n      fetchingWeatherData();\r\n    }\r\n  }, [city, town, startTime]);\r\n\r\n  return [data, loading];\r\n}\r\n\r\nfunction FetchCalendarState(api_key, calendar_id, startTime, use_example_data){\r\n  // api_key, calendar_id: essential string to fetch the api,\r\n  // see google api for more info\r\n  // startTime: int of time\r\n  // use_example_data: bool indicates whether to use the example data\r\n  // or user's own api key to fetch user's own calendar\r\n  \r\n  const [data, setData] = React.useState({});\r\n  const [loading, setLoading] = React.useState(false);\r\n  React.useEffect(() => {\r\n    async function fetchingCalendarData() {\r\n      try{\r\n        setLoading(true);\r\n        setData({is_success: undefined});\r\n        const EndTime = 604800000 + startTime;\r\n        const res = await fetchCalendar(\r\n          api_key, \r\n          calendar_id,\r\n          new Date(startTime).toISOString(),\r\n          new Date(EndTime).toISOString(),\r\n          use_example_data\r\n        );\r\n        setData(parseCalendar(res));\r\n      }\r\n      catch(error){\r\n        console.log(error);\r\n        setLoading(undefined);\r\n        setData(CalendarFetchErrorMsg(error));\r\n      }\r\n    }\r\n    if (startTime){\r\n      fetchingCalendarData();\r\n    }\r\n  }, [api_key, calendar_id, startTime, use_example_data]);\r\n\r\n  return [data, loading];\r\n}\r\n\r\nexport {FetchingWeatherState, FetchCalendarState};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}